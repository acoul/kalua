#!/bin/sh /etc/rc.common

START=00

boot()
{
	local line unixtime reason
	local crashlog='/sys/kernel/debug/crashlog'

	export TZ="$( uci -q get system.@system[0].timezone )"
	# https://lists.openwrt.org/pipermail/openwrt-devel/2014-January/023196.html
	if   [ -e '/www/everlasting_syslog.txt' ]; then
		unixtime="$( date +%s -r '/www/everlasting_syslog.txt' )"
	elif [ -e '/www/switch.txt' ]; then
		unixtime="$( date +%s -r '/www/switch.txt' )"
	else
		unixtime="$( date +%s -r '/etc/banner' )"	# build-date
	fi
	date -s @$(( unixtime + 30 ))

	grep -q 'debugfs'$ '/proc/filesystems' && mount -o noatime -t debugfs debugfs '/sys/kernel/debug'

	[ -e "$crashlog" ] && {
		[ -e '/www/CRASHLOG_WORKS' ] || touch '/www/CRASHLOG_WORKS'
	}

	reason_long()
	{
		local reason="$1"
		local reason_long

		reason_long="$( grep "reason=$reason " '/etc/kalua/system' | cut -d')' -f1 | cut -d'|' -f2 )"
		set -- $reason_long

		echo "${1:-unknown_reason}"
	}

	if [ -e '/www/CRASHLOG_WORKS' ]; then
		export TZ="$( uci -q get system.@system[0].timezone )"

		if line="$( grep -s ' ux.,' "$crashlog" )"; then			# see system_crashreboot()
			# <4>[29071.240000] CPU: 0 PID: 7201 Comm: ux0,1388632927, Not tainted 3.10.24 #18
			# <4>[ 9071.240000] CPU: 0 PID: 7201 Comm: ux0,1388632927, Not tainted 3.10.24 #18
			# or on kernel 3.3.8:
			# <4>[ 1436.952000] Process uxL,1403754286, (pid: 9633, threadinfo=80446000, task=80cdb978, tls=77691440)
			set -- $line

			while shift; do {
				case "$1 $2" in
					'Comm: ux'*|'Process ux'*)
						reason="$(   echo "$2" | cut -b3 )"
						unixtime="$( echo "$2" | cut -d',' -f2 )"
						break
					;;
				esac
			} done

			date --set @$unixtime
			reason="$( reason_long "$reason" )"
			echo "$( date ) [OK] reboot reason: '$reason'" >>'/www/everlasting_syslog.txt'
			echo "$reason" >'/tmp/REBOOT_REASON'
		else
			if [ -e "$crashlog" ]; then
				echo "$( date ) [ERROR] crash detected in '$crashlog'" >>'/www/everlasting_syslog.txt'
				echo "realcrash" >'/tmp/REBOOT_REASON'
			else
				echo "$( date ) [ERROR] reboot without reason/crash" >>'/www/everlasting_syslog.txt'
				echo "nocrash" >'/tmp/REBOOT_REASON'
			fi
		fi
	else
		reason="$( tail -n1 '/www/everlasting_syslog.txt' | grep 'system_crashreboot' | cut -d'=' -f2 )"
		reason="$( reason_long "$reason" )"
		echo "${reason:-nocrash}" >'/tmp/REBOOT_REASON'
		echo "$( date ) BOOTUP: reason: ${reason:-nocrash}" >>'/www/everlasting_syslog.txt'
	fi

	echo '# [START] /www/everlasting_syslog.txt'   >/dev/console
	tail -n5 '/www/everlasting_syslog.txt' >/dev/console
	echo '# [READY] /www/everlasting_syslog.txt'   >/dev/console

	# remove trash:
	rm -fR /*0*
	rm -fR /*1*
	rm -fR /*2*
	rm -fR /*3*
	rm -fR /*4*
	rm -fR /*5*
	rm -fR /*6*
	rm -fR /*7*
	rm -fR /*8*
	rm -fR /*9*

	# http://www.kernel.org/doc/Documentation/sysctl/kernel.txt
	# http://www.kernel.org/doc/Documentation/sysctl/vm.txt
	# /proc/sys/vm/panic_on_oom = 2
	# /proc/sys/kernel/panic_on_oops = 1
	# /proc/sys/kernel/panic = 10
	#
	# since r42046: http://wiki.openwrt.org/doc/uci/firewall#nf_conntrack_skip_filter
	# net.netfilter.nf_conntrack_skip_filter=0

	for ENTRY in "vm.panic_on_oom=2" "kernel.panic_on_oops=1" "kernel.panic=10" "net.netfilter.nf_conntrack_skip_filter=0"; do {
		/sbin/sysctl -w "$ENTRY" >/dev/null
		grep -q ^"$ENTRY" '/etc/sysctl.conf' || {
			echo "$ENTRY" >>'/etc/sysctl.conf'
		}
	} done

#	if /usr/sbin/memtester 22M 1 >"/tmp/MEMTESTER"; then
#		rm "/tmp/MEMTESTER"
#	else
#		local file="/www/MEMTESTER.$( cat /www/REBOOT_COUNTER ).$?"	# _system reboots
#		mv "/tmp/MEMTESTER" "$file"
#		echo "Error during memtester: $file" >>/www/everlasting_syslog.txt
#	fi

	# zram is included since r35033
	grep -q ^"zram " "/proc/modules" || /etc/init.d/zram start

	# fixme! why does it hang? with plain OpenWrt this does not happen
	[ -e '/etc/init.d/rcS' ] && {
		fgrep -q "killall logger" "/etc/init.d/rcS" || echo "killall logger" >>"/etc/init.d/rcS"
	}

	touch '/tmp/BOOT'
	touch '/tmp/DEBUG'
	mkdir '/tmp/SERVICE'

	local maxtry=10
	while ! sh -n /tmp/loader; do {
	        /etc/kalua_init
		maxtry=$(( maxtry - 1 ))
		[ $maxtry -gt 0 ] || {
			[ -e "/www/loader.backup" ] && cp "/www/loader.backup" "/tmp/loader"
			break
		}
	} done

	. /tmp/loader
	[ -e "/www/loader.backup" ] || cp "/tmp/loader" "/www/loader.backup"

	# really needed?
	/etc/init.d/override_uci_vars enabled || {
		/etc/init.d/override_uci_vars boot
		/etc/init.d/override_uci_vars enable
	}

	_watch archivsize '/www/everlasting_syslog.txt' 400 500
	_watch archivsize '/www/PINGCHECK' 1000 2000

	[ -n "$LOWMEM" ] && {
		[ -e "/etc/init.d/apply_profile" ] && {
			/etc/init.d/telnet disable
			/etc/init.d/dropbear disable
			/etc/init.d/dnsmasq disable
			uci set network.wan.proto=static	# dont start udhcpc
			uci set dhcp.@dnsmasq[0].disabled=1

			case "$CONFIG_PROFILE" in
				*adhoc)
				;;
				*)
					uci set wireless.radio0.disabled=1
				;;
			esac
		}
	}

	[ -e "/etc/config/wireless" ] || return 0

	# patch olsrd for using likely an adhoc-interfaces if we are in hybrid mode + fallback to wlan0
	grep -q "Cell:" /etc/init.d/olsrd || {
		sed -i 's#if network_get_device IFNAME "$interface"; then$#if network_get_device IFNAME "$interface"; then case $IFNAME in wlan*) for IFNAME in $IFNAME $IFNAME-1 $IFNAME-2 $IFNAME-3 $IFNAME; do iw dev $IFNAME info | fgrep -q IBSS \&\& break; done;; esac#' /etc/init.d/olsrd
	}
}

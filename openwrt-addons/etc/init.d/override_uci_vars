#!/bin/sh /etc/rc.common
. /tmp/loader

START=01

# nothing to see here, go away... 8-)
#
# this file is a workaround for changing (uci-)settings for already running nodes
# later we will split it into separate mysettings.ipk for each installation
# if in doubt, simply remove it from your own build

uci_already_added()
{
	local config="$1"	# e.g. network
	local section="$2"	# e.g. alias
	local item="$3"		# e.g. ipaddr
	local wish="$4"		# e.g. 10.10.43.33
	local value i=0

	while value="$( uci -q get $config.@$section[$i].$item )"; do {
		[ "$wish" = "$value" ] && return 0 || i=$(( i + 1 ))
	} done

	return 1
}

apply_olsr_roaming()
{
	local wired_networks="$1"
	local list_ap="$( _wifi get any mode ap ) $wired_networks"
	[ -z "$list_ap" ] && return 1

	# e.g. dnsmasq 2.66 or openwrt script are broken for DHCP-range
	[ $OPENWRT_REV -ge 41037 ] || return 1

	[ -e /lib/modules/*/macvlan.ko ] || return 1
	kmodule_force_activation 'macvlan'

	local router_ip='192.168.0.1'
	local dns_ip='192.168.0.1'
	local index network list

	uci set network.mastergate='interface'			# here we collect all interfaces, see below
	uci set network.mastergate.type='bridge'		# bridge needed for multiple interfaces
	uci set network.mastergate.proto='static'		# list of ifnames is added below
	uci set network.mastergate.ipaddr='192.168.0.1'
	uci set network.mastergate.netmask='255.255.0.0'

	# we occupy the existing 'wlan'-section (generated from apply_profile)
	uci set dhcp.wlan.interface='mastergate'
	uci set dhcp.wlan.dhcp_option="option:router,$router_ip,$dns_ip"
	uci set dhcp.wlan.leasetime='12h'	# very long: otherwise a ssh-session is lost when the IP changes...
	uci set dhcp.wlan.start="192.168.${NODENUMBER_ROAMING}.2"
	uci set dhcp.wlan.limit='253'
	uci delete dhcp.wlan.netmask		# otherwise 'wlan.start' has no effect

	# FIXME! 2nd AP on same band does not work
	for index in $list_ap; do {
		if network="$( uci -q get wireless.@wifi-iface[$index].network )"; then
			# e.g. 'wlanRADIO1'
			uci set wireless.@wifi-iface[$index].disabled='0'		# force active
			uci set wireless.@wifi-iface[$index].disassoc_low_ack='1'
			uci add_list dhcp.@dnsmasq[0].notinterface="$network"		# omit dnsmasq-logerrors
		else
			# e.g. 'lan'
			network="$index"
			uci delete dhcp.$index
		fi

		uci set network.roaming${index}='device'
		uci set network.roaming${index}.type='macvlan'
		uci set network.roaming${index}.name="roaming${index}"
		uci set network.roaming${index}.ifname="@$network"
		uci set network.roaming${index}.macaddr='02:ff:ff:ff:00:00'		# same on all bands

		list="$( uci -q get network.mastergate.ifname )"
		case "$list" in
			*"roaming${index}"*)
			;;
			*)
				uci set network.mastergate.ifname="${list}${list:+ }roaming${index}"
			;;
		esac
	} done

	uci_already_added olsrd Hna4 netaddr "192.168.${NODENUMBER_ROAMING}.0" || {
		uci add olsrd Hna4 >/dev/null
		uci set olsrd.@Hna4[-1].netaddr="192.168.${NODENUMBER_ROAMING}.0"
		uci set olsrd.@Hna4[-1].netmask='255.255.255.0'
	}

	config_add_alias 'mastergate' "192.168.${NODENUMBER_ROAMING}.1/24"

	case "$HARDWARE" in
		'Mercury MAC1200R')
			# dirty hack: ath10k cannot do hybrid (ibss/ap mixed) mode:
			_wifi set ap 5ghz disabled '1'
		;;
	esac

	return 0
}

apply_olsr_speed()
{
	local value="$1"
	local i=0

	# search for the string, which was added with this value
	# https://github.com/openwrt-routing/packages/commit/34e1ff5702372099599f764d272069ba914661c4
	grep -sq 'sven-ola' '/etc/init.d/olsrd' '/lib/functions/olsrd.sh' || return 1

	while uci -q get olsrd.@Interface[$i] >/dev/null; do {
		uci set olsrd.@Interface[$i].speed="$value"
		i=$(( i + 1 ))
	} done
}

config_add_alias()
{
	local network="$1"
	local ip_and_mask="$2"
	local gateway="$3"
	local ip mask

	ip="${ip_and_mask%/*}"
	mask="${ip_and_mask#*/}"
	mask="$( _net cidr2mask "$mask" )"

	uci_already_added network alias ipaddr "$ip" || {
		uci add network alias >/dev/null
		uci set network.@alias[-1].interface="$network"
		uci set network.@alias[-1].proto='static'
		uci set network.@alias[-1].ipaddr="$ip"
		uci set network.@alias[-1].netmask="$mask"
		[ -n "$gateway" ] && uci set network.@alias[-1].gateway="$gateway"
	}
}

hostapd_activate_coredump()
{
	# not needed for >= r39139 (why?)
	[ -e '/lib/wifi/hostapd.sh' ] && {
		grep -q "unlimited" "/lib/wifi/hostapd.sh" || {
			sed -i 's/hostapd -P/ulimit -c unlimited; &/' '/lib/wifi/hostapd.sh'
		}
	}

	# since r38988
	[ -e '/lib/netifd/wireless/mac80211.sh' ] && {
		grep -q 'unlimited' '/lib/netifd/wireless/mac80211.sh' || {
			sed -i 's|/usr/sbin/hostapd -P|ulimit -c unlimited; &|g' '/lib/netifd/wireless/mac80211.sh'
		}
	}
}

kmodule_is_deactivated()
{
	local kmodule="$1"
	local file

	# e.g. 'sch_teql' in /etc/modules.d/73-sched
	for file in /etc/modules.d/*; do {
		grep -q ^"# $kmodule" "$file" && return 0
		grep -q  ^"#$kmodule" "$file" && return 0
	} done

	return 1
}

kmodule_force_activation()
{
	local kmodule="$1"
	local file

	# e.g. 'sch_teql' in /etc/modules.d/73-sched
	for file in /etc/modules.d/*; do {
		grep -q ^"# $kmodule" "$file" && {
			sed -i 's/^[^a-z]*//' "$file"
			return 0
		}

		grep -q ^"#$kmodule" "$file" && {
			sed -i 's/^[^a-z]*//' "$file"
			return 0
		}
	} done
}

kmodule_force_deactivation()
{
	local kmodule="$1"
	local file

	# e.g. 'sch_teql' in /etc/modules.d/73-sched
	for file in /etc/modules.d/*; do {
		grep -q ^"$kmodule" "$file" && {
			sed -i "s/^$kmodule/# &/" "$file"
			return 0
		}
	} done
}

kmodules_group_deactivate()
{
	local group="$1"	# e.g. 'ipt-*'
	local file

	for file in /etc/modules.d/$group ; do {
		file="$( basename "$file" )"
		kmodule_is_deactivated "$file" || kmodule_force_deactivation "$file"
	} done
}

kmodules_group_activate()
{
	local group="$1"	# e.g. 'ipt-*'
	local file

	for file in /etc/modules.d/$group ; do {
		file="$( basename "$file" )"
		kmodule_is_deactivated "$file" && kmodule_force_activation "$file"
	} done
}

boot()
{
	local list pattern proc

	for daemon in ulogd firewall sysntpd; do {
		[ -e "/etc/init.d/$daemon" ] || continue
		/etc/init.d/$daemon enabled && /etc/init.d/$daemon disable
	} done

	grep -sq ^'STOP=' '/etc/init.d/network' && {
		sed -i 's/^STOP=/# &/' '/etc/init.d/network'
	}

	if [ -e '/etc/init.d/apply_profile' ]; then
		[ -s '/www/cgi-bin-welcome.sh'	] || ln -s '/www/cgi-bin-welcome'   '/www/cgi-bin-welcome.sh'
		[ -s '/www/cgi-bin-sql.sh'	] || ln -s '/www/cgi-bin-sql'	    '/www/cgi-bin-sql.sh'
		[ -s '/www/cgi-bin-tool.sh'	] || ln -s '/www/cgi-bin-tool_fff+' '/www/cgi-bin-tool.sh'

		uci set uhttpd.main.interpreter='.sh=/bin/ash'

		[ -n "$LOWMEM" ] && {
			kmodules_group_deactivate '*'
			kmodules_group_activate   'zram'
			kmodules_group_activate   'lib-lzo'
			kmodules_group_activate   'b44'

#			kmodules_group_deactivate  'ipt-*'
#			kmodule_force_deactivation 'b43'
#			kmodule_force_deactivation 'mac80211'
#			kmodule_force_deactivation 'cfg80211'	# includes compat
#			kmodule_force_deactivation 'ipv6'
#			kmodule_force_deactivation 'ip6tables'

			/etc/init.d/odhcpd disable
		}

		return 0
	else
		# https://lists.openwrt.org/pipermail/openwrt-devel/2015-January/030887.html
		rm /etc/uci-defaults/* 2>/dev/null

		[ -n "$LOWMEM" ] && {
			kmodules_group_deactivate '*'		# unneeded, but doesnt hurt (for old nodes)
			kmodules_group_activate   'zram'
			kmodules_group_activate   'lib-lzo'
			kmodules_group_activate   'b44'

			# gpio_button_hotplug leds_gpio - needed?

			kmodule_force_activation 'b43'
			kmodule_force_activation 'mac80211'
			kmodule_force_activation 'cfg80211'	# includes compat
			kmodule_force_activation 'ath'
			kmodule_force_activation 'ath5k'
			# allow 'switch', 'diag'

			needs_full_kmodules()
			{
				_net local_inet_offer >/dev/null && return 0
				test -e '/www/SIMPLE_MESHNODE' && return 1

				return 0
			}

			# for F in /etc/modules.d/*; do echo "# $F"; cat $F; done
			needs_full_kmodules && {
				kmodule_force_activation 'ipt-core'
						# has:  x_tables xt_tcpudp ip_tables iptable_filter iptable_mangle xt_limit
						#       xt_mac xt_multiport xt_comment ipt_LOG xt_TCPMSS ipt_REJECT
						# need: x_tables xt_tcpudp ip_tables iptable_filter iptable_mangle   ---
						#       xt_mac    ---          ---      ---    xt_TCPMSS ipt_REJECT

				kmodule_force_activation 'ipt-conntrack'
						# has:  nf_conntrack nf_defrag_ipv4 nf_conntrack_ipv4 xt_state
						#       iptable_raw xt_NOTRACK xt_CT xt_conntrack
						# need: nf_conntrack nf_defrag_ipv4 nf_conntrack_ipv4   ---
						#           ---        ---      ---     ---

				kmodule_force_activation 'ipt-nat'
						# has:  nf_nat iptable_nat ipt_MASQUERADE
						# need: nf_nat iptable_nat     ---

				# spÃ¤testens hier braucht es eine funktion die spezifisches
				# kernelmodul (egal in welcher datei) freischaltet
				kmodule_force_activation 'ipt-ipopt'
						# has:  xt_mark + sehr viele
						# need: xt_mark
			}
		}
	fi

	integer2fourhex()	# e.g. 8 -> 00:08
	{			# fixme! max = 999 fixme! generalize it, join with bssid_wellformed()
		if [ $1 -lt 100 ]; then
			if [ $1 -lt 10 ]; then
				echo "00:0$1"
			else
				echo "00:$1"
			fi
		else
			echo "0$( echo "$1" | cut -b 1 ):$( echo "$1" | cut -b 2-3 )"
		fi
	}

	apply_olsr_speed '6'

	kmodule_force_deactivation sch_teql
	kmodule_force_deactivation ifb

	case "$HARDWARE" in
		'Mercury MAC1200R')
			# dirty hack: ath10k cannot do hybrid (ibss/ap mixed) mode:
			_wifi set ap 5ghz disabled '1'
		;;
	esac

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*|'TP-LINK TL-WR703N v1')
			# we use the button to trigger an WPS-action/soundplayer
			[ -e '/etc/rc.button/reset' ] && rm '/etc/rc.button/reset'
		;;
	esac

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*)
			# dirty-fix default mac: 00:04:9f:ef:01:01
			# https://dev.openwrt.org/ticket/14714

			[ -e '/www/monitoring.wifimac' ] && {
				# wifimac is correct
				read wmac <'/www/monitoring.wifimac'
				wmac="${wmac:0:2}:${wmac:2:2}:${wmac:4:2}:00:$( integer2fourhex "$NODENUMBER" )"

				[ -z "$( uci -q get network.lan.macaddr )" ] && uci set network.lan.macaddr="$wmac"
				[ -z "$( uci -q get network.wan.macaddr )" ] && uci set network.wan.macaddr="$wmac"
			}
		;;
	esac

	uci set sms.@sms[0].username='gforce'
	uci set sms.@sms[0].password='mvemjsunpsms77'

	[ -e '/www/cgi-bin-status.html' ] || {
		_http redirect '302' 'cgi-bin-status.sh' 'html_only' >'/www/cgi-bin-status.html'
	}

	# disable OLSRd1 - IPv6
	[ -e '/etc/config/olsrd6' ] && uci set olsrd6.@olsrd[0].disabled='1'

	# mark end of startup-sequence
	grep -q "ENDBOOT" '/etc/init.d/done' || sed -i 's|^}|\n	touch /tmp/ENDBOOT\n}|' '/etc/init.d/done'

	pattern='procd_open_instance'
	file='/etc/init.d/dnsmasq'
	grep -q "$patter"$ "$file" && {
		sed -i "s/${pattern}$/&; procd_set_param limits core='unlimited'/" "$file"
	}

	# fix sysupgrade, see patch in r39169:
	[ $( _system version short ) -eq 39139 ] && {
		grep -q ' mount ' '/etc/init.d/boot' && {
			sed -i 's| mount | /bin/mount |' '/etc/init.d/boot'
			sed -i 's|umount |/bin/umount |' '/etc/init.d/umount'
			sed -i 's|mount |/bin/mount |' '/lib/functions.sh'
			sed -i 's|umount -l |/bin/umount -l |' '/lib/upgrade/common.sh'
			sed -i 's|mount -o |/bin/mount -o |' '/lib/upgrade/common.sh'
			sed -i 's#mount | #/bin/mount | #' '/lib/upgrade/common.sh'
		}
	}

	# https://dev.openwrt.org/ticket/14705
	[ $( _system version short ) -le 39218 ] && {
		file='/lib/netifd/wireless/mac80211.sh'
		pattern='json_get_vars bssid ssid basic_rate key'
		grep -sq "$pattern"$ "$file" && {
			sed -i "s/$pattern/$pattern mcast_rate/" "$file"
		}
	}

	# no DNS-responses on WAN from outside
	[ "$( uci -q get dhcp.@dnsmasq[0].notinterface )" = "wan" ] || {
		_net local_inet_offer >/dev/null && {
			uci set dhcp.@dnsmasq[0].notinterface='wan'	# add pppoe-wan?
		}
	}

	[ $( _system version short ) -eq 38043 ] && {
		grep -q 'sleep 30' '/etc/init.d/olsrd' || {
			sed -i 's/^start() {$/&\nsleep 30/' '/etc/init.d/olsrd'
		}
	}

	# TODO: be more exact - set for correct radioX
	[ -e "/lib/modules/$( uname -r )/ath9k.ko" ] && {
		# enforce 802.11n
		# https://dev.openwrt.org/ticket/17748
		# https://dev.openwrt.org/ticket/17541
		_wifi set any any htmode HT20
	}

	case "$CONFIG_PROFILE" in
		abtpark*)
			[ $OPENWRT_REV -eq 44420 ] && {
				uci del wireless.radio1.htmode
				uci del wireless.radio0.htmode
			}
		;;
	esac

	# AP = autochannel
	case "$CONFIG_PROFILE" in
		*_ap)
			# our special country 'Micronesia' = FM with valid channel 1-11 and 36-48
			if grep -s 'REGHACK:' '/etc/openwrt_patches' | grep -q ' FM '; then
				_wifi set ap 2ghz channel 'auto'
				_wifi set ap 5ghz channel 'auto'
			else
				# typically the mesh is on channel 11
				_wifi set ap 2ghz channel "$( _math random_integer 1 11 )"

				# TODO: use only non_dfs_channels
				# iw phy1 info | grep '* .... MHz ' | cut -d'[' -f2 | cut -d']' -f1 | grep -v 'DFS'
				_wifi set ap 5ghz channel \
					"$( _list random_element '36 40 44 48 52 56 60 64 100 104 108 112 116 120 124 128 132 136 140 149 153 157 161 165' )"
			fi

			case "$( uci -q get wireless.radio0.htmode )" in
				'HT40'*)
					uci set wireless.radio0.htmode='HT20'
				;;
			esac
		;;
	esac

	needs_ipv6_disable()
	{
		case "$CONFIG_PROFILE" in
			boltenhagendh*|schoeneck*)
				return 0
			;;
		esac

		test -n "$LOWMEM"
	}

	needs_ipv6_disable && {
		/etc/init.d/6relayd enabled && /etc/init.d/6relayd disable	# removed in r40893
		/etc/init.d/odhcpd  enabled && /etc/init.d/odhcpd  disable

		uci show network.wan6 && {
			uci set network.wan6.disabled=1
			uci set network.wan6.ifname=
		}
	}

	needs_serial_console_disable()
	{
		case "$CONFIG_PROFILE" in
			boltenhagendh*|schoeneck*)
				return 0
			;;
		esac

		test -n "$LOWMEM"
	}

	needs_serial_console_disable && {
		grep "::askconsole:" "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askconsole:.*/# &/' "/etc/inittab"
		grep "::askfirst:"   "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askfirst:.*/# &/'   "/etc/inittab"
	}

	# mail: send via scp OR 0ldskool
	case "$CONFIG_PROFILE" in
		liszt28*)
			uci set mail.@smtp[0].mail='logins@bluebottle.com'
			uci set mail.@smtp[0].auth='bastian@10.63.2.34:kalua_mail'
		;;
		ffweimar*)
			# needs setup / concept
		;;
		*)
			uci set mail.@smtp[0].mail='logins@bluebottle.com'
			uci set mail.@smtp[0].auth='-P 222 bastian@bwireless.mooo.com:kalua_mail'
		;;
	esac

	uci set system.@monitoring[0].serverip='84.38.67.43'

	if [ -n "$LOWMEM" ]; then
		case "${CONFIG_PROFILE}-${NODENUMBER}" in
			lisztwe_ap-15)
			;;
			*)
				[ -n "$( uci get dhcp.@dnsmasq[0].dhcpscript )" ] && uci delete 'dhcp.@dnsmasq[0].dhcpscript'
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_ap)
				# activate on all lowmem-devices when unset
				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					_net local_inet_offer >/dev/null || uci set olsrd.@meta[0].hnaslave=1
				}
			;;
			*_adhoc)
				[ -e "/www/SIMPLE_MESHNODE" ] || {
					# unforce stricter kmodule unloading
					touch "/www/SIMPLE_MESHNODE"
					rm "/www/GOOD_MODULE_UNLOAD"
				}
			;;
		esac

		uci set uhttpd.main.redirect_https='0'
		uci set uhttpd.main.interpreter='.sh=/bin/ash'
		uci set dhcp.@dnsmasq[0].cachesize=100
	else
		uci set dhcp.@dnsmasq[0].cachesize=1000
		uci set uhttpd.main.redirect_https='0'

		if [ $( _system ram_size ) -gt 32768 ]; then
			uci set uhttpd.main.max_requests=10
		else
			uci set uhttpd.main.max_requests=3
		fi

		uci set uhttpd.main.interpreter='.sh=/bin/ash'

		# https://dev.openwrt.org/changeset/22589
		uci set uhttpd.main.rfc1918_filter='0'
		uci set uhttpd.main.listen_http='80'
		if [ -e "/usr/lib/uhttpd_tls.so" -o -e "/usr/lib/opkg/info/uhttpd-mod-tls.list" ]; then
			uci set uhttpd.main.listen_https='443'
		else
			uci delete uhttpd.main.listen_https
		fi
	fi

	remove_section()
	{
		local check_var="$1"	# e.g. network.@alias[].interface
		local check_value="$2"	# e.g. loopback
		local p1="$( echo "$check_var" | cut -d'[' -f1 )"
		local p2="$( echo "$check_var" | cut -d']' -f2 )"

		local i
		for i in $( seq 15 -1 0 ); do {
			while [ "$( uci get -q "${p1}[$i]${p2}" )" = "$check_value" ]; do {
				uci delete "${p1}[$i]"
			} done
		} done
	}

	apply_cronwatchdog()	# cron-watchdog via netifd-dhcp-hotplug-call: iface/60-dyndns
	{
		remove_section "network.@alias[].interface" 'loopback'
		uci add network 'alias' >/dev/null
		uci set network.@alias[-1].interface='loopback'
		uci set network.@alias[-1].proto='dhcp'
		uci set network.@alias[-1].defaultroute='0'	# dont apply default route
		uci set network.@alias[-1].peerdns='0'		# and DNS

		remove_section "dhcp.@host[].name" 'lo-alias'
		uci add dhcp 'host' >/dev/null
		uci set dhcp.@host[-1].ip='127.0.0.2'
		uci set dhcp.@host[-1].mac='00:00:00:00:00:00'
		uci set dhcp.@host[-1].name='lo-alias'

		remove_section "dhcp.@dhcp[].interface" 'loopback'
		uci add dhcp 'dhcp' >/dev/null
		uci set dhcp.@dhcp[-1].interface='loopback'
		uci set dhcp.@dhcp[-1].start='2'
		uci set dhcp.@dhcp[-1].limit='2'
		uci set dhcp.@dhcp[-1].leasetime='1h'
		uci set dhcp.@dhcp[-1].force='1'
		uci set dhcp.@dhcp[-1].ignore='0'
	}

	[ -z "$LOWMEM" ] && apply_cronwatchdog

	case "$CONFIG_PROFILE" in
		apphalle*)
			list="0174/3564025"
		;;
		schoeneck*)
			list="01729094456"
		;;
		aschbach*|hotello*)
			list="01728117657 01727772555 01775906689"
		;;
		liszt28*)
			list=
		;;
		spbansin*|itzehoe*)
			list="01601531855"
		;;
		tkolleg*)
			list="01714338506"
		;;
		dhfleesensee*)
			list="01604797497"
		;;
		satama*)
			# list="016096378028"
		;;
		ejbw*)
			list="01622666169"	# lars
		;;
		rehungen*)
			list=
		;;
		malchow*)
			list='01736234581'
		;;
	esac
	uci set sms.@sms[0].admin="0176/24223419 $list"

	# see /usr/sbin/cron.reverse_ssh_tunnel
	case "$CONFIG_PROFILE" in
		extrawatt*|shankar*|fparkssee*|limona*|marinapark*|versiliaje*|cupandcoffee*|wuensch*)
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
		;;
		marinabh*|amalienhof*|adagio*)
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
			uci set system.@monitoring[0].maintenance_ports='22 80'
		;;
	esac

	local up down unshaped mac
	case "$CONFIG_PROFILE" in
		apphalle*)
			up=384kbit
			down=3mbit
		;;
		rehungen*)
			case "$NODENUMBER" in
				36)
					# haupt52 (was: 16mbit)
					up=64kbit
					down=64kbit
				;;
				37|76|77|92|95)
					up=768kbit	# haupt25|schuetz17
					down=16mbit
				;;
				106|107|30|108|110|43|44|66|67|97|20|21)
					# breite6|ONEklausg70|schuetz2|101b|haupt15|ONEhaupt43a|haupt70
					up=768kbit
					down=10mbit
				;;
				*)
					up=768kbit
					down=6mbit
				;;
			esac
		;;
		limona*)
			up=768kbit
			down=8mbit
		;;
		leonardo*|castelfalfi*|adagio*)
			up=768kbit
			down=6mbit
		;;
		hotello*)
			up=512kbit
			down=4mbit
		;;
		liszt28*)
			# R30mb|T61|f36NAS|schlachtNAS|danny|ApplePhotograf|ralfRadio
			unshaped='70:1a:04:b1:5f:cf 00:13:e8:82:7e:4b 02:50:43:ab:1c:91 02:50:43:34:25:bc 9c:b7:0d:a2:49:a5 5c:96:9d:7a:9f:8d 00:90:3e:fc:81:c2'
			up=384kbit
			down=1500kbit
		;;
		ffweimar*)
		;;
		*)
			speed_up=128kbit
			speed_down=1mbit
		;;
	esac

	[ -n "$up" -a -n "$down" ] && {
		uci set system.@weblogin[0].default_speed_up="$up"
		uci set system.@weblogin[0].default_speed_down="$down"
	}

	uci -q get system.@weblogin[0].mac_unshaped >/dev/null && uci delete 'system.@weblogin[0].mac_unshaped'
	for mac in $unshaped; do {
		uci -q get "system.@weblogin[0].mac_unshaped" | grep -q "$mac" || {
			uci add_list system.@weblogin[0].mac_unshaped="$mac"
		}
	} done


	case "$CONFIG_PROFILE" in
		fparkssee*)
			uci set system.@weblogin[0].gateway_check='10.63.222.33'
		;;
		satama*)
			uci set system.@weblogin[0].gateway_check='10.63.119.33'
		;;
		marinapark*)
			uci set system.@weblogin[0].gateway_check='10.63.10.33'
		;;
	esac

	for INDEX in $( _wifi get any mode ap ); do {
		uci set wireless.@wifi-iface[$INDEX].disassoc_low_ack='0'
	} done

	# let wifi-dhcp be on 2ghz - till we fix it
	# e.g. TPLINK 4900 has 2ghz on 2nd wifi-phy
	for INDEX in $( _wifi get any mode ap ); do {
		_wifi is2ghz $INDEX && {
			NAME="$( uci -q get wireless.@wifi-iface[$INDEX].network )"
			uci set dhcp.wlan.interface="$NAME"
			break
		}
	} done

	_wifi set ap 5ghz disabled '1'

	# disable wan6-dhcp if wan4-proto = static
	[ "$( uci -q get network.wan.proto )" = 'static' ] && {
		uci set network.wan6.disable=1
	}

	case "$CONFIG_PROFILE" in
		monami*)
			uci set system.@weblogin[0].authserver='10.63.7.1'
		;;
		limona*)
			# node6 = SSID-2 = 4,3 + (5)
			# node5 = SSID-5 = nix
			# node4 = SSID=3 = 3,6 (wifi-only)
			# node3 = SSID-4 = 4,6
			# node2 = SSID-1 = nix

			case "$NODENUMBER" in
				2|5)
					uci set system.@monitoring[0].lazy_wifi_framecounter='true'
				;;
				*)
					uci set system.@monitoring[0].lazy_wifi_framecounter='false'
				;;
			esac

			uci set system.@weblogin[0].respect_missing_db='true'

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			apply_olsr_roaming "$ROAMING" && {
				_wifi set ap any ssid 'Appartementhaus Limona'
			}
		;;
		extrawatt*)
			uci set system.@weblogin[0].freelan='1'
		;;
		berlinle*)
			uci set olsrd.@meta[0].hnaslave=0
		;;
		olympia*)
			[ "$NODENUMBER" = '7' ] && uci set system.@monitoring[0].pingcheck="$( _ipsystem getvar WIFIADR 2 )"
			uci set system.@monitoring[0].report_switch_change='true'
			_wifi set ap any ssid "Hotel Olympia $(( $NODENUMBER - 1 ))"
		;;
		castelfalfi*)
			[ $( _system date unixtime ) -lt $( _system date 2unixtime 'Sun Apr 10 23:55:00 CET 2015' ) ] && {
				touch '/tmp/FREE'
			}

			uci set system.@weblogin[0].defaultlang='en'
			uci set system.@weblogin[0].auth_type='roomnumber'
			uci set system.@weblogin[0].ticketstock='32'
			uci set system.@weblogin[0].force_lan_reachable='1'

			uci set olsrd.@meta[0].ignore_restarts='true'
		;;
		fparkssee*|satama*|marinapark*)
			if [ -z "$LOWMEM" ]; then
				uci set olsrd.@meta[0].hnaslave=0
			else
				uci set system.@weblogin[0].enabled='0'
			fi

			_wifi set adhoc any mcast_rate '1000'
			_wifi set adhoc 2ghz channel '11'
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:00:11'

			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'
		;;
		apphalle*)
			uci set olsrd.@meta[0].hnaslave='0'

			_wifi set ap    any  ssid "$( _weblogin metadata_locationname | cut -d' ' -f1 ) $NODENUMBER"
			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			apply_olsr_roaming "$ROAMING" && {
				_wifi set ap any ssid 'Appartementhaus am Dom'
			}
		;;
		xoai*)
			uci set system.@weblogin[0].enabled='1'
			uci set system.@weblogin[0].dynamic_portfw='00:1a:97:'	# cam/ICS2030
			uci set system.@system[0].timezone='ICT-7'

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			apply_olsr_roaming "$ROAMING" && {
				_wifi set ap any ssid 'hotelxoai.com'
			}
		;;
		tuberlin*)
			uci set system.@weblogin[0].enabled='0'
		;;
		amalienhof*)
			uci set system.@weblogin[0].enabled='0'
			uci set olsrd.@meta[0].hnaslave=0
			_wifi set ap 2ghz ssid 'Borbing'
		;;
		ffweimar*)
			uci set system.@monitoring[0].autoupload_config='true'
			uci set system.@weblogin[0].freelan='1'
			uci set system.@weblogin[0].auth_type='none'
			[ -z "$LOWMEM" ] && uci set system.@monitoring[0].statusprecache='1'
		;;
		ibfleesensee*)
			uci set system.@weblogin[0].enabled='1'
			uci set olsrd.@meta[0].hnaslave=0

			uci set system.@monitoring[0].cdp_send='true'
			URL='http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/oldpackages/cdp-tools_20070302-1_ar71xx.ipk'
			echo >>$SCHEDULER "_software package_is_installed cdp-tools || _software packages_install $URL"

			_wifi set ap 2ghz ssid 'Iberotel'
			_wifi set ap 5ghz ssid 'Konferenz'

			[ "$NODENUMBER" = '2' ] && {
				config_add_alias 'lan' '192.168.112.2/24' '192.168.112.1'
				uci set system.@monitoring[0].cisco_collect='true'
			}
		;;
		paltstadt*)
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
			uci set system.@monitoring[0].maintenance_ports='22 80'
			uci set system.@system[0].db_backup_force='true'
			uci set olsrd.@meta[0].throttle_traffic='1'
			_wifi set adhoc any mcast_rate '1000'
		;;
		abtpark*)
			uci set system.@weblogin[0].ticketstock='32'

			[ $OPENWRT_REV -eq 44420 ] && {
				uci del wireless.radio1.htmode		# FIXME!
				uci del wireless.radio0.htmode
			}

			_wifi set adhoc 2ghz 'x'
			_wifi set ap    2ghz 'a-park.de'

			_wifi set adhoc 5ghz 'X'
			_wifi set ap    5ghz 'a_park.de'
			_wifi set ap    5ghz disabled '1'
		;;
		liszt28*)
			[ -n "$LOWMEM" -a $OPENWRT_REV -gt 43735 ] && {
				uci set wireless.radio0.disabled='1'
				uci delete network.wan6
				uci set network.wan.proto='static'

				/etc/init.d/odhcpd disable
				/usr/sbin/uhttpd disable
				/etc/init.d/sysntpd disable
				/etc/init.d/dropbear disable
				/etc/init.d/dnsmasq disable
				/etc/init.d/log disable

				grep 'askconsole' '/etc/inittab' | grep -q ^'#' || {
					sed -i 's/.*askconsole/# &/' /etc/inittab
				}
			}

			# so we can call 'http://www.internet'
			uci set dhcp.@dnsmasq[0].local='/internet/'
			uci set dhcp.@dnsmasq[0].domain='internet'

			hostapd_activate_coredump

			apply_olsr_speed '7'

			[ "$( uci -q show network.wan.proto )" = 'pppoe' ] && {
				uci set system.@system[0].avoid_autoreboot='true'
			}

			[ -n "$LOWMEM" ] && uci set system.@weblogin[0].enabled='0'
			[ -z "$LOWMEM" ] && uci set system.@monitoring[0].statusprecache='1'
			uci set system.@monitoring[0].ignore_switch_error='true'
			uci set system.@monitoring[0].autoupload_config='true'

			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@weblogin[0].freelan='1'
			uci set system.@weblogin[0].logtraffic='1'
			uci set system.@weblogin[0].authserver='10.63.21.97'

			uci set olsrd.@meta[0].fixedarp='1'
			uci set olsrd.@meta[0].throttle_traffic='1'
			uci set olsrd.@meta[0].nexthop_dns='false'	# FIXME!

			case "$HARDWARE" in
				'Seagate GoFlex Home')
					uci set system.@system[0].avoid_autoreboot='true'
				;;
			esac

			case "$NODENUMBER" in
				670)
					# AlexLaterne
					uci set system.@monitoring[0].pingcheck='10.63.209.129'
					uci set dhcp.lan.ignore=1
				;;
				99)
					uci set system.@monitoring[0].pingcheck='10.63.21.97'
					uci set system.@monitoring[0].pingcheck_lazy='1'
				;;
				602|863)
					# ewerk|schneiderei
					uci set system.@monitoring[0].pingcheck='8.8.8.8'
					uci set system.@monitoring[0].pingcheck_lazy='1'
				;;
				280)
					# danny
					uci set system.@monitoring[0].pingcheck='8.8.8.8'
				;;
			esac

#			case "$NODENUMBER" in
#				# alrik|danny|frenzel|bueroAussen|carsten|F36dach|rewe|bueroInnen|eckermann1|TobiNoEther|SchwanNTP|meshcube
#				278|280|262|261|273|269|279|222|33|265|375|291)
#					_wifi set adhoc 2ghz mcast_rate '1000'
#				;;
#				# tobi|tobiAlt|balkon|klaus|schneiderei|twohl
#				813|265|339|823|863|81)
#					_wifi set adhoc 2ghz mcast_rate '1000'
#				;;
#				*)
					_wifi set adhoc any  mcast_rate '6000'
#				;;
#			esac

			case "$NODENUMBER" in
				275)
					# ayse, probs with double IP
					uci set system.@weblogin[0].enabled='0'
				;;
				799)
					# elsternest
					uci_already_added olsrd Hna4 netaddr "192.168.1.21" || {
						uci add olsrd Hna4 >/dev/null
						uci set olsrd.@Hna4[-1].netaddr="192.168.1.21"
						uci set olsrd.@Hna4[-1].netmask='255.255.255.255'
					}
				;;
			esac

			case "$NODENUMBER" in
				# tobi|tobiAlt|balkon|klaus|alrik|twohl|schneiderei|roll10|roehr10|martin1200
				813|265|339|823|278|81|863|855|798|836)
					uci set system.@weblogin[0].hideandseek='1'
					uci set system.@weblogin[0].auth_type='none'

					[ "$( _file hash '/www/images/logo.gif' )" = '633f7c77760c44330559ebfe9f040901' ] || {
						if [ -e '/www/images/logo-freifunk.gif' ]; then
							mv '/www/images/logo.gif' '/www/images/logo-original.gif'
							mv '/www/images/logo-freifunk.gif' '/www/images/logo.gif'
						else
							URL='http://wireless.subsignal.org/images/f/f4/Ww_logo_543.png'
							DEST='/www/images/logo-freifunk.gif'
							echo >>$SCHEDULER "_wget do '$URL' >'$DEST'"
							echo >>$SCHEDULER '/etc/init.d/override_uci_vars boot'
							echo >>$SCHEDULER '_weblogin generate_prebuilt_splash_htmlfile persistent'
						fi
					}
				;;
			esac

			case "$CONFIG_PROFILE" in
				*'hybrid')
					_wifi set ap 5ghz disabled '1'
				;;
			esac

			case "$NODENUMBER" in
				290)
					# ralf unten
					_wifi set adhoc any mcast_rate '1000'
					_wifi set ap 2ghz ssid 'radio'
					touch "/tmp/vds_user_00:90:3e:fc:81:c2"		# phillips radio

					ROAMING='false'
				;;
				292)
					# ralf oben
					_wifi set adhoc any mcast_rate '1000'
					_wifi set ap 2ghz ssid 'radioquelle'
					uci set system.@monitoring[0].maintenance='reverse_sshtunnel'

					ROAMING='false'
				;;
				339)
					_wifi set ap 2ghz ssid 'weimarnetz (Wolfsheim)'
				;;
				375)
					_wifi set ap 2ghz ssid 'weimarnetz (WeisserSchwan)'
				;;
				337)
					_wifi set ap 2ghz ssid 'weimarnetz (Emilio)'
#					_wifi set adhoc any mcast_rate '1000'
				;;
				279)
					_wifi set ap 2ghz ssid 'weimarnetz (REWE)'
				;;
				280)
					_wifi set ap 2ghz ssid 'weimarnetz (Danny)'
				;;
				274)
					_wifi set ap 2ghz ssid 'weimarnetz (F36dach)'
				;;
				276)
					_wifi set ap 2ghz ssid 'weimarnetz (F36keller)'
				;;
				275)
					_wifi set ap 2ghz ssid 'weimarnetz (F36mitte)'
				;;
				277)
					_wifi set ap 2ghz ssid 'weimarnetz (F36stube)'
					uci set system.@monitoring[0].button_smstext='Fries36: Knopf gedrueckt: bitte anrufen 03643-827407'
					uci set system.@monitoring[0].button_phone='0176/24223419 0179/7465017'
				;;
				303)
					_wifi set ap 2ghz ssid 'weimarnetz (F36drucker)'
				;;
				278)
					_wifi set ap 2ghz ssid 'weimarnetz (meyer8)'
					_wifi set ap 5ghz ssid 'weimarnetz (meyer8a)'
				;;
				602)
					# ewerk
					touch '/tmp/FREE'
					_wifi set ap 2ghz ssid 'Mitarbeiter'
				;;
				*)
					_wifi set ap    2ghz ssid "Sommerfest-${NODENUMBER}"
					_wifi set ap    5ghz ssid "Sommerfest-${NODENUMBER}a"
				;;
			esac

			case "$NODENUMBER" in
				292|290|279|375)
					# ralf-x2|mar|schwanNTP
				;;
				*)
					# touch '/tmp/FREE'
				;;
			esac

			case "$NODENUMBER" in
				348)
					# TowerPower
					_wifi set adhoc any mcast_rate '6000'
					_wifi set adhoc any chanbw 20
				;;
				350)
					# wachturm
					_wifi set adhoc any mcast_rate '1000'
				;;
			esac

			case "$NODENUMBER" in
				348)
					# TowerPower
					uci set dhcp.lan.ignore=1
				;;
			esac

			case "$NODENUMBER" in
				266)
					# ina
					uci set system.@weblogin[0].enabled='0'
				;;
				276)
#					uci add network interface
#					uci set network.@interface[-1].interface='mytunnel'
#					uci set network.@interface[-1].ifname='tap0'
#					uci set network.@interface[-1].proto='static'
#					uci set network.@interface[-1].ipaddr='10.63.21.93'
#					uci set network.@interface[-1].netmask='255.255.255.252'
#					uci set network.@interface[-1].mtu='1450'
				;;
			esac

			uci set olsrd.@meta[0].hnaslave=0
			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ff'

			# old from metric=etxff_eth
			uci delete 'olsrd.@Interface[0].Mode' 2>/dev/null
			uci delete 'olsrd.@Interface[1].Mode' 2>/dev/null

			_wifi set adhoc 2ghz ssid 'weimarnetz'
			_wifi set adhoc 2ghz channel '5'
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:ba:be'

			_wifi set adhoc 5ghz ssid 'weimarnetz-5Ghz'
			_wifi set adhoc 5ghz channel '40'
			_wifi set adhoc 5ghz bssid '02:ca:ff:ee:00:40'
#			_wifi set any   5ghz chanbw '5'

			case "x$NODENUMBER" in
				# 14 devices:
				# kurt|HQ|Main+|UFO|mb940n|gruselboden|Ufo2|1043er|fonera|sommerbar|exSteinAuss|exDSL
				349|222|600|601|602|297|298|345|289|339|295|341|556|99)
					touch '/tmp/FREE'
					uci set dhcp.wlan.leasetime='5m'
					uci set system.@weblogin[0].authserver='10.63.92.129'
					uci set system.@vds[0].enabled='0'
					# TODO: channel = auto (after everybody has ethernet)

					_wifi set any 2ghz txpower '1'
					_wifi set adhoc 2ghz mcast_rate '12000'
					_wifi set ap 2ghz ssid 'digital_bauhaus'
					_wifi set ap 5ghz ssid 'digital_bauhaus_5GHz'
				;;
			esac

			_wifi longshot name 'f36-schlacht' distance 360 channel 100 chanbw 20 mhz mcast 6000 nodes '719 670'
			_wifi longshot name 'exTobi' distance 500 channel 40 chanbw 20 mhz mcast 6000 nodes '805 806'
			case "$NODENUMBER" in
				798)
					# roehr10
					_wifi set ap 2ghz ssid 'Weimarnetz'
				;;
				855)
					# rollplatz
					uci set system.@system[0].avoid_autoreboot='true'
					_wifi set ap any ssid 'weimarnetz (C64)'
					_wifi set adhoc 2ghz mcast_rate '1000'
					uci set system.@weblogin[0].hideandseek='1'
				;;
				862)
					# zwickauer flitzer
					uci delete 'system.@weblogin[0].authserver'
					_wifi set ap any ssid 'Kurt-Eisner-76'
					_wifi set adhoc any ssid 'o'
					uci set system.@weblogin[0].freelan='false'
					uci set system.@system[0].db_backup_force='true'

					ROAMING='false'
				;;
				806)
					_wifi set adhoc 5ghz bssid '02:ca:ff:ee:00:40'
					# phillip.klein@uni-weimar.de - 0157/88424887
				;;
				x805|x806)
					# TODO: include into longshot()
					uci set wireless.radio0.htmode='NOHT'
					uci set wireless.radio0.beacon_int='250'
				;;
				719|670)
					uci delete 'wireless.radio0.ht_capab'
					uci set wireless.radio0.htmode='HT20'
				;;
				850)
					# demo1
					_wifi set ap 2ghz ssid 'MalchowIT (demo1)'
					uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
					uci set system.@monitoring[0].maintenance_ports='22 80'
					uci set system.@weblogin[0].authserver='10.63.85.225'
					_wifi set adhoc 2ghz ssid 'x'
					uci set system.@weblogin[0].freelan='false'

					ROAMING='false'
				;;
				851)
					# demo2
					_wifi set ap 2ghz ssid 'MalchowIT (demo2)'
					uci set system.@weblogin[0].authserver='10.63.85.225'
					_wifi set adhoc 2ghz ssid 'x'
					uci set system.@weblogin[0].freelan='false'

					ROAMING='false'
				;;
				6|810)
					# ute:drucker/inet
					touch '/tmp/vds_user_00:21:6a:8b:38:76'
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
				704)
					# sommerbar
					ROAMING='lan wan'
				;;
			esac

			# TODO: test if this speeds up roaming?
			_wifi set any 2ghz distance 100

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'weimar.freifunk.net'
				}

				_wifi set adhoc 2ghz ssid 'ffintern.2GHz'
				_wifi set adhoc 5ghz ssid 'ffintern.5GHz'
			}
		;;
		ilm1*)
			uci set system.@monitoring[0].statusprecache='true'
			uci set system.@weblogin[0].authserver='10.63.35.225'
			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ff'

			_wifi set adhoc 2ghz ssid 'x'
			_wifi set adhoc 5ghz ssid 'o'

			case "$NODENUMBER" in
				800)
					_wifi set ap 2ghz ssid 'Ilmstrasse1-Erdgeschoss'
					_wifi set ap 5ghz ssid 'Ilmstrasse1-Erdgeschoss-5GHz'
				;;
				801)
					_wifi set ap 2ghz ssid 'Ilmstrasse1-OG1'
					_wifi set ap 5ghz ssid 'Ilmstrasse1-OG1-5GHz'
				;;
				802)
					_wifi set ap 2ghz ssid 'Ilmstrasse1-OG2'
					_wifi set ap 5ghz ssid 'Ilmstrasse1-OG2-5GHz'
				;;
			esac

			_wifi set ap 5ghz disabled '1'
		;;
		ejbw*)
			uci set system.@monitoring[0].ignore_lossyethernet='true'	# powerline
			uci set system.@weblogin[0].authserver='172.17.0.2'
			uci set dhcp.wlan.leasetime='5m'
			uci set olsrd.@meta[0].hnaslave=0
			uci set system.@monitoring[0].backping='16'	# lueftungskeller

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:ff:ee'
			_wifi set ap    2ghz ssid 'EJB Weimar'		# PMR: poor mens roaming

			# real: 367m
			_wifi longshot name 'j2-reithaus' distance 380 channel 161 chanbw 20 mhz mcast 12000 nodes '100 101'

			case "$NODENUMBER" in
				39|35|31|30)
					# riegel / pbx
					uci set system.@system[0].avoid_autoreboot='true'
				;;
				43)
					uci set system.@weblogin[0].enabled='1'
					uci set system.@weblogin[0].freelan='1'
				;;
				100)
					uci set dhcp.lan.ignore=1

					config_add_alias 'lan' '192.168.112.2/24' '192.168.112.1'

					[ "$( uci -q get system.@netfilter[0].lan_masquerading )" = '0' ] || {
i						uci add system netfilter >/dev/null
						uci set system.@netfilter[-1].lan_masquerading='0'
					}

					uci set system.@monitoring[0].pingcheck='10.10.101.1'
				;;
				101)
#					uci add network alias
#					uci set network.@alias[-1].interface="lan"
#					uci set network.@alias[-1].proto=static
#					uci set network.@alias[-1].ipaddr=192.168.10.2
#					uci set network.@alias[-1].netmask=255.255.255.0
#					uci rename network.@alias[-1]=myLAN

#					uci add network route
#					uci set network.@route[-1].interface="myLAN"
#					uci set network.@route[-1].target=192.168.0.0
#					uci set network.@route[-1].netmask=255.255.255.0
#					uci set network.@route[-1].gateway=192.168.10.1

					uci_already_added olsrd Hna4 netaddr '192.168.10.0' || {
						uci add olsrd Hna4 >/dev/null
						uci set olsrd.@Hna4[-1].netaddr=192.168.10.0
						uci set olsrd.@Hna4[-1].netmask=255.255.255.0
					}

#					uci add olsrd Hna4
#					uci set olsrd.@Hna4[-1].netaddr=192.168.0.0
#					uci set olsrd.@Hna4[-1].netmask=255.255.255.0

					uci set system.@monitoring[0].pingcheck='10.10.100.1'
				;;
			esac
		;;
		leonardo*)
			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@weblogin[0].authserver='10.10.3.33'
			uci set olsrd.@meta[0].hnaslave=0

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:00:11'

			case "$NODENUMBER" in
				6|26)
					_wifi set anymode anyfreq off
				;;
			esac

			case "$NODENUMBER" in
				6)
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@weblogin[0].allow_wan='true'
					uci set system.@weblogin[0].enabled='0'		# otherwise DNS from wan-side is blocked
					uci set network.wan.public_ip='false'		# since 2014nov10 / primacom
					uci set dhcp.lan.ignore='1'
				;;
				3)
					# konferenz / seems to be NAT'ed sometimes
					uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
					uci set system.@weblogin[0].freelan='1'
				;;
			esac
		;;
		malchowit*)
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
			uci set system.@monitoring[0].maintenance_ports='22 80'
			uci set system.@system[0].db_backup_force='true'
			uci set system.@weblogin[0].ticketstock='32'

			apply_olsr_roaming && {
				_wifi set ap any ssid 'Zimmer Mellentin'
			}
		;;
		malchowpferde*)
			uci set olsrd.@meta[0].allow_no_neigh='true'
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
			uci set system.@monitoring[0].maintenance_ports='22 80'
			uci set system.@system[0].db_backup_force='true'
		;;
		malchowpension*)
			uci set olsrd.@meta[0].allow_no_neigh='true'
			uci set system.@weblogin[0].auth_type='roomnumber'
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
			uci set system.@monitoring[0].maintenance_ports='22 80'
			uci set system.@system[0].db_backup_force='true'

			_wifi set ap 2ghz ssid 'Fackelgarten'
			_wifi set ap 5ghz ssid 'Fackelgarten Konferenz'
		;;
		tkolleg*)
			uci set system.@system[0].db_backup_force='true'
			uci set olsrd.@meta[0].hnaslave=0
			uci set system.@timeserver[0].server='10.10.0.1'
			uci set system.@weblogin[0].freelan='1'

			[ "$NODENUMBER" = '2' ] && {
				uci set network.lan.netmask='255.255.0.0'
				uci set network.lan.gateway='10.10.0.1'
				uci set dhcp.@dnsmasq[0].server='10.10.0.1'
				# olsrd-hna: 0/0 + 10.10.0.1/32 + 10.10.0.2/32 + 10.10.0.10/32
			}
		;;
		giancarlo*)
			uci set system.@weblogin[0].respect_missing_db='true'

			apply_olsr_roaming && {
				_wifi set ap any ssid 'Giancarlo'
			}

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'
			_wifi set adhoc 2ghz mcast_rate '12000'
		;;
		marinabh*)
			uci set system.@weblogin[0].authserver='10.10.2.129'
			[ "$NODENUMBER" = "2" ] && _wifi set any any disabled '1'
			uci set olsrd.@meta[0].hnaslave=0

			apply_olsr_roaming && {
				_wifi set ap any ssid 'Marina Boltenhagen'
			}

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'
			_wifi set adhoc 2ghz mcast_rate '12000'
		;;
		adagio*)
			uci set olsrd.@meta[0].hnaslave=0

			_wifi set adhoc 2ghz channel '11'
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:00:11'

			_wifi set adhoc 2ghz mcast_rate '18000'		# prefer 5ghz
			_wifi set adhoc 5ghz mcast_rate  '6000'
		;;
		lisztwe*)
			uci set olsrd.@meta[0].hnaslave=0

			_wifi set adhoc 2ghz mcast_rate '18000'		# prefer 5ghz
			_wifi set adhoc 5ghz mcast_rate  '6000'
		;;
		rehungen*)
			uci set system.@monitoring[0].ignore_switch_error='true'
			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@weblogin[0].freelan='1'
			uci set olsrd.@meta[0].fixedarp='1'
			uci set system.@weblogin[0].logtraffic='1'
			uci set system.@monitoring[0].backping='8'	# kiga

			# NetIO230b/Kiga  - 24:a4:2c:10:17:fa
			# NetIO230b/Puppe - 24:a4:2c:10:02:a6
			uci set system.@weblogin[0].dynamic_portfw='24:a4:2c:'

			case "$NODENUMBER" in
				8)
					# till will we fix 230/232
					uci set system.@monitoring[0].ignore_lossyethernet='true'
				;;
				89|131|44|72)
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
				63)
					# hauptstrasse 114 unten
					uci set system.@monitoring[0].pingcheck='10.10.254.33'
				;;
				113)
					# hostname = kirchgasse34kinderzimmer-unten
					# nexthop = node5 = hauptstrasse40b-NEU2
					# lanmac seen: 70:1a:04:b1:e6:40
					uci set system.@weblogin[0].blocked='true'
				;;
				249)
					# feld -> rehungen
					uci set system.@monitoring[0].ignore_lossyethernet='true'
					uci set olsrd.@meta[0].reboot_weak_ethernet='0'
				;;
				250)
					# feld -> sollstedt
					uci set system.@monitoring[0].ignore_lossyethernet='false'
					uci set olsrd.@meta[0].reboot_weak_ethernet='1'
					uci set system.@monitoring[0].pingcheck='10.10.249.1'
				;;
				254)
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@weblogin[0].blocked='true'
					uci set system.@monitoring[0].pingcheck='10.10.8.33'
					_wifi set any any disabled '1'
				;;
				253)
					uci set system.@monitoring[0].pingcheck='8.8.8.8'
				;;
			esac

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:ff:ee'
			_wifi set ap    2ghz  ssid "Rehungen $NODENUMBER"

			# TODO: sort nodenumber-order <-> hostname
			# distance: roundup to 50m
			_wifi longshot name 'heidenroder-thalmann'  distance  100 channel 157 chanbw 20 mhz mcast 18000 nodes '253 252'

			_wifi longshot name 'feld-soll           '  distance 3100 channel  48 chanbw 20 mhz mcast 18000 nodes '251 250'
			_wifi longshot name 'feld-kiga'             distance  950 channel 165 chanbw 20 mhz mcast 18000 nodes '249 248 237'

			_wifi longshot name 'kiga-kirchg40b'        distance  200 channel  36 chanbw 20 mhz mcast  6000 nodes '236'		# nolink
			_wifi longshot name 'kiga-hauptstr25'       distance   50 channel  36 chanbw 20 mhz mcast  6000 nodes '234'		# nolink
			_wifi longshot name 'kiga-kirchg38'         distance  400 channel  36 chanbw 20 mhz mcast  6000 nodes '232'		# nolink
			_wifi longshot name 'kiga-klausg70'         distance  200 channel 161 chanbw 20 mhz mcast 18000 nodes '230 229'
			_wifi longshot name 'kiga-kirchg33'         distance  150 channel 153 chanbw 20 mhz mcast 18000 nodes '228 227'
#			_wifi longshot name 'kiga-klausg67b3'       distance  350 channel  40 chanbw 20 mhz mcast  6000 nodes '212'		# nolink
			_wifi longshot name 'kiga-dietzelsg39b'     distance  200 channel  36 chanbw 20 mhz mcast  6000 nodes '224'		# nolink
			_wifi longshot name 'kiga-nussberg116/73a'  distance  350 channel  40 chanbw 20 mhz mcast 18000 nodes '222 221 212'	# 223 missing = kiga - now 212
			_wifi longshot name 'kiga-puppe'            distance  400 channel  60 chanbw 20 mhz mcast 18000 nodes '214 213'

			_wifi longshot name 'puppe-hauptstr14-br1'  distance  250 channel 153 chanbw 20 mhz mcast 18000 nodes '220 219 247'
			_wifi longshot name 'puppe-breitestr14'     distance  300 channel  36 chanbw 20 mhz mcast  6000 nodes '218'		# nolink
			_wifi longshot name 'puppe-schuetzeng'      distance  250 channel 112 chanbw 20 mhz mcast 18000 nodes '216 215 210'

			_wifi longshot name 'kirchg33-hauptstr52'   distance  200 channel 149 chanbw 20 mhz mcast 18000 nodes '226 225'
#			_wifi longshot name 'klaus101b-klausg67b3'  distance  200 channel  36 chanbw 20 mhz mcast  6000 nodes '201 203'		# 201 missing
			_wifi longshot name 'klaus101b-klausg67b3'  distance 1200 channel  48 chanbw 20 mhz mcast  6000 nodes '201 203'		# 201 missing -> feld/249?
		;;
		boltenhagendh*)
			uci set system.@monitoring[0].maxcost='6500'
			uci set system.@monitoring[0].ignore_lossyethernet='true'	# too much restarting OLSR/fully wired switched
			uci set system.@weblogin[0].authserver='10.10.111.129'		# Festscheune3
			uci set olsrd.@meta[0].hnaslave=0

			apply_olsr_speed '20'

			case "$NODENUMBER" in
				2|170|139)
					# master, surfstation IB + DH
					uci set dhcp.lan.ignore='0'
				;;
				*)
					uci set dhcp.lan.ignore='1'
				;;
			esac

			case "$NODENUMBER" in
				111|2)
					# festscheune3/authserver + master
					uci set system.@system[0].avoid_autoreboot='true'
				;;
			esac

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:ff:ee'
			_wifi set adhoc 2ghz channel '11'

			case "$NODENUMBER" in
				138|139|200|168|170)
					# serverraum/surfstation DH
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
#				33|34|35|36|37|38|39|40|41|42|43|44)
#					# haus 1
#					uci set olsrd.@meta[0].hnaslave=1
#					uci set olsrd.@meta[0].hnaslave_dirty='true'
#				;;
			esac

			if [ -e '/www/hnaslave_dirty' ]; then
				uci set olsrd.@meta[0].hnaslave=1
				uci set olsrd.@meta[0].hnaslave_dirty='true'
			else
				uci set olsrd.@meta[0].hnaslave=1
				uci set olsrd.@meta[0].hnaslave_dirty='true'

				# 2 = nexthop and 'AP-only'
				uci set olsrd.@meta[0].hnaslave_condition='2 ap'
			fi

			case "$NODENUMBER" in
				# FS: Schliemann | Konferenz | Lilienthal | Serverraum | Barlach
				# 7 war Konferenz -> putt (Barlach nun Konferenz), Barlach nun 8
				# 203-206 = 4 x zusatz
				157|81|7|8|174|175|176|203|204|205|206)
					uci set system.@weblogin[0].enabled='0'
					uci set olsrd.@meta[0].hnaslave='0'

#					apply_olsr_roaming
				;;
			esac

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			apply_olsr_roaming "$ROAMING" && {
				_wifi set ap any ssid 'Weisse Wiek'
			}
		;;
		spbansin*)
			uci set system.@weblogin[0].auth_type='roomnumber'
			uci set olsrd.@meta[0].hnaslave=0

			_wifi set ap 5ghz ssid 'Seepark highspeed'
			_wifi set ap 2ghz ssid 'Seepark'
			_wifi set adhoc 5ghz ssid 'x'
			_wifi set adhoc 2ghz ssid 'X'
		;;
		dhfleesensee*)
			uci set olsrd.@meta[0].hnaslave=0

			_wifi set ap 5ghz ssid 'Dorfhotel Konferenz'
			_wifi set ap 2ghz ssid 'Dorfhotel'
			_wifi set adhoc 5ghz ssid 'x'
			_wifi set adhoc 2ghz ssid 'X'

			case "$NODENUMBER" in
				15|35|32|93)
					# mesh = fe80::227:22ff:fe45:7928%$LANDEV
					# pavillion + neigh (maybe: 6,98)
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
			esac
		;;
		schoeneck*)
			_wifi set any 2ghz distance 100

			uci set system.@weblogin[0].db_cachesize='6000'
			uci set system.@weblogin[0].dynamic_portfw='24:a4:2c:10:21:48'		# NetIO230b/Keller

			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@monitoring[0].ignore_switch_error='true'

			uci set olsrd.@meta[0].fixedarp='1'
			uci set olsrd.@meta[0].hnaslave=0

			_wifi set ap    2ghz txpower '15'
			_wifi set ap    2ghz ssid "IFA Schoeneck $NODENUMBER"
			_wifi set ap    5ghz disabled '1'			# !!!
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:00:11'
			_wifi set adhoc 2ghz channel '11'
			_wifi set adhoc 2ghz ssid 'x'
			_wifi set adhoc 2ghz mcast_rate '6000'

			case "$NODENUMBER" in
				228|230|234|231|235|232|229|233)
					# all switched together, netio230b on master
					uci set dhcp.lan.ignore=1
				;;
				2)
					_wifi set any any disabled '1'

					# DHCP is 192.168.2.107 / gateway = 192.168.2.1
					config_add_alias 'wan' '192.168.2.108/24'
				;;
			esac
		;;
		*)
			# TODO: does not work anymore - at least with r43080
			# enforce b43-hack
			[ -e "/lib/modules/$( uname -r )/b43.ko" ] && {
				local file="/lib/wifi/mac80211.sh"
				local keyword="keyspec}"	# must be at the end of a line
				local command1='config_get bitrates "$device" bitrates'
				local command2='test -n "$bitrates" \&\& iw dev "$ifname" set bitrates legacy-2.4 $bitrates'

				[ "$( uci -q get wireless.@wifi-iface[0].mode )" = "adhoc" ] && {
					[ -n "$( uci -q get wireless.radio0.bitrates )" ] || {
						uci set wireless.radio0.bitrates="6 9 12 18 24 36 48 54"

						case "$( uci -q get wireless.@wifi-iface[0].mcast_rate )" in
							1000|2000|5500|11000)
								uci delete 'wireless.@wifi-iface[0].mcast_rate'
							;;
						esac
					}

					grep -q "$keyword"$ "$file" && {
						sed -i "s/$keyword$/$keyword ; $command1 ; $command2 /" "$file"
					}
				}
			}
		;;
	esac

	case "$HARDWARE" in
		"Buffalo WHR-HP-G54")
			case "$( uci -q get wireless.radio0.rxantenna )-$( uci -q get wireless.radio0.txantenna )" in
				"1-1")
				;;
				*)
					uci set wireless.radio0.rxantenna=1
					uci set wireless.radio0.txantenna=1
					_log do uci_commit daemon alert 'wireless: changed antenna settings'
					uci commit wireless
				;;
			esac
		;;
		"Linksys WRT54G"*)
			case "$( uci -q get wireless.radio0.rxantenna )-$( uci -q get wireless.radio0.txantenna )" in
				"0-0")
				;;
				*)
					uci set wireless.radio0.rxantenna=0
					uci set wireless.radio0.txantenna=0
					_log do uci_commit daemon alert 'wireless: changed antenna settings'
					uci commit wireless
				;;
			esac
		;;
		"TP-LINK TL-WR1043ND")
			# use driver defaults
			case "$CONFIG_PROFILE" in
				liszt28*)
					# dont touch
				;;
				*ap)
					# dont touch
				;;
				*)
					uci -q get wireless.radio0.txpower && uci delete 'wireless.radio0.txpower'
				;;
			esac
		;;
	esac

	case "$( uci -q get wireless.radio0.hwmode )" in
		*'n'*)
			if [ -n "$( uci -q get wireless.radio0.longshot )" ]; then
				:
				# dont touch, wifi_longshot() sets it
			else
				# 802.11n works with distributed beaconing
				uci set wireless.radio0.beacon_int=100
			fi
		;;
	esac

	case "$( uci -q get wireless.radio0.htmode )" in
		'HT40'*)
			uci set wireless.radio0.noscan="1"
		;;
	esac

	# fix for forgotten network
	case "$CONFIG_PROFILE" in
		*hybrid)
			grep -q "wlanadhoc" "/etc/config/wireless" && {
				uci show network | grep -q ^"network.wlanadhoc=" || {
					uci set network.wlanadhoc=interface
					uci set network.wlanadhoc.proto=static
					uci set network.wlanadhoc.ipaddr=$(  uci get network.wlan.ipaddr )
					uci set network.wlanadhoc.netmask=$( uci get network.wlan.netmask )
				}
			}
		;;
	esac

	# specials for testnetwork
	case "$CONFIG_PROFILE" in
		liszt28*)
			[ -h '/www/webcam.jpg' ] && {
				uci show system | grep -q 'webcam' || {
					uci add system webcam >/dev/null
					uci set system.@webcam[-1].storage_path='bastian@10.63.2.34:'
				}
			}


			case "x-$NODENUMBER" in
				99)
					uci set olsrd.@meta[0].watch_ip='10.63.2.25'
					uci set olsrd.@meta[0].watch_value='2000'
				;;
				2)
					uci set olsrd.@meta[0].watch_ip='10.63.76.1'
					uci set olsrd.@meta[0].watch_value='3000'
				;;
				112)
					uci set olsrd.@meta[0].watch_ip='10.63.6.1'
					uci set olsrd.@meta[0].watch_value='3000'
				;;
				6)
					uci set olsrd.@meta[0].watch_ip='10.63.112.1'
					uci set olsrd.@meta[0].watch_value='3000'
				;;
				10)
					uci set olsrd.@meta[0].watch_ip='10.63.6.3'
					uci set olsrd.@meta[0].watch_value='2000'
				;;
			esac
		;;
	esac

	batman_kmodules_are_deactivated()
	{
		kmodule_is_deactivated 'batman-adv'
	}

	batman_kmodules_force_activation()
	{
		kmodule_force_activation 'batman-adv'
		kmodule_force_activation 'ebtables'
#		kmodule_force_activation 'macvlan'
	}

	batman_kmodules_force_deactivation()
	{
		kmodule_force_deactivation 'batman-adv'
		kmodule_force_deactivation 'ebtables'
#		kmodule_force_deactivation 'macvlan'
	}

	batman_needed()
	{
		[ -e '/usr/sbin/batctl' ] || return 1

		case "$CONFIG_PROFILE" in
			testbatman*)
				return 0
			;;
			*)
				batman_kmodules_are_deactivated || batman_kmodules_force_deactivation
				return 1
			;;
		esac
	}

	if batman_needed; then
		uci set batman-adv.bat0.orig_interval=1000	# default = 1000 ms

		local file='/etc/init.d/dnsmasq'
		fgrep -q 'netmask_dhcpcalc' "$file" || {
			sed -i 's/start$/&; local netmask_dhcpcalc; config_get netmask_dhcpcalc "$cfg" netmask_dhcpcalc/' "$file"
			sed -i 's/ $netmask / ${netmask_dhcpcalc:-$netmask} /' "$file"
			sed -i 's/,$NETMASK,/,$netmask,/' "$file"
			# since r39101 needed:
			sed -i 's/eval \(.*\)/&\n	test "$PREFIX" = "${netmask_dhcpcalc:-$netmask}" \&\& netmask="$NETMASK"/' "$file"
		}

		fgrep ' "$dynamicdhcp" = "0" ' "$file" | fgrep -q 'test' || {
			sed -i "s/.* \"\$dynamicdhcp\" = \"0\" .*/& ; test \"\$START\" = '192.168.0.2' \&\& START='192.168.$NODENUMBER.2'; test \"\$END\" = '192.168.0.254' \&\& END='192.168.$NODENUMBER.254'/" "$file"
		}

		batman_kmodules_are_deactivated && batman_kmodules_force_activation
	else
#		batman_kmodules_are_deactivated || batman_kmodules_force_deactivation

		case "$CONFIG_PROFILE" in
			*ap|*hybrid)
				uci set dhcp.wlan.ignore=0
			;;
		esac
	fi

	batman_needed && {
		local dns_ip i
		local router_ip="192.168.$NODENUMBER.1"
		local master_gateway

		case "$CONFIG_PROFILE" in
			testnet*)
				router_ip="192.168.0.1"		# every router has this ip (there is never a NODE 0)
				master_gateway="192.168.99.1"
				dns_ip="$router_ip"
			;;
		esac

		local startup="/tmp/WIFI_SPECIALS.sh"

		set_mac()
		{
			local uci_path="$1"
			local mac="$2"
			local file='/www/monitoring.wifimac'

			if [ -e "$file" ]; then
				uci set "$uci_path"="$mac"
			else
				uci delete "$uci_path"
			fi
		}

		batalias_add_if_needed()
		{
			local funcname='batalias_add_if_needed'
			local ifname_ask="$1"
			local ifname proto i j devname mac index channel

			for i in $(seq 0 100); do {
				proto="$( uci -q get network.@alias[${i}].proto )" || continue

				case "$proto" in
					'batadv')
						ifname="$( uci -q get network.@alias[${i}].interface )"
						[ "$ifname_ask" = "$ifname" ] && {
							uci delete "network.@alias[$i]"
						}
					;;
				esac
			} done

			# FIXME! dont add twice
			uci add network alias >/dev/null
			uci set network.@alias[-1].interface="$ifname_ask"
			uci set network.@alias[-1].proto=batadv
			uci set network.@alias[-1].mesh=bat0

			case "$ifname_ask" in
				'lan'|'wan')
					case "$ifname_ask" in
						'lan')
							mac="02:00:ca:b1:$( integer2fourhex "$NODENUMBER" )"
						;;
						'wan')
							mac="02:00:de:ad:$( integer2fourhex "$NODENUMBER" )"
						;;
					esac

					set_mac "network.$ifname_ask.macaddr" "$mac"
				;;
				'wlan'*)
					# e.g. wlan | wlanadhoc | wlanadhocRADIO1
					index="$( _wifi get "$ifname_ask" index )" && {
						channel="$( _wifi get "$ifname_ask" channel )"
						mac="ca:$( integer2fourhex "$channel" ):00:$( integer2fourhex "$NODENUMBER" )"

						set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
					}
				;;
			esac

			echo >>"$startup" "DEVNAME=\$( ifstatus \"$ifname_ask\" | grep '\"device\":' | cut -d'\"' -f4 )"
			echo >>"$startup" "batctl interface | grep -q ^\"\$DEVNAME: active\" || batctl if add \$DEVNAME"
		}

		# the first added interface is our originator-address (mac)
		batalias_add_if_needed 'lan'

		uci -q get network.wan >/dev/null && {
			# fixme! ejbw needs an override
			case "$( _net local_inet_offer )" in
				'wan'|'pppoe')
					echo >>"$startup" "# wan not added, because local inet-offer"
				;;
				*)
					batalias_add_if_needed 'wan'
				;;
			esac
		}

		local index mac

		# ifname = macaddress:
		# bridge = 02:00:b0:0b:$nodenumber
		# gw0    = 02:00:c0:ca:c0:1a
		#
		# lan    = 02:00:ca:b1:$nodenumber
		# wan    = 02:00:de:ad:$nodenumber
		# ap1    = 02:00:0a:00:$nodenumber
		# ap2    = 02:00:0b:00:$nodenumber
		# adhocX = ca:$chan:00:$nodenumber

		# fixme! iterate over all wifi-interfaces, e.g. 'add adhoc any/5ghz'
		case "$CONFIG_PROFILE" in
			*'_hybrid')
				_wifi get 'wlanadhoc'       check && batalias_add_if_needed 'wlanadhoc'
				_wifi get 'wlanadhocRADIO1' check && batalias_add_if_needed 'wlanadhocRADIO1'

				# first AP
				index="$( _wifi get 'wlan' index )" && {
					mac="02:00:0a:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}

				# second AP
				index="$( _wifi get 'wlanRADIO1' index )" && {
					mac="02:00:0b:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}
			;;
			*'_adhoc')
				_wifi get 'wlan' check && batalias_add_if_needed 'wlan'
			;;
			*'_ap')
				# first AP
				index="$( _wifi get 'wlan' index )" && {
					mac="02:00:0a:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}
			;;
		esac

		case "$CONFIG_PROFILE" in
			*hybrid)
				for i in $(seq 0 15); do {
					[ "$( uci -q get wireless.@wifi-iface[$i].mode )" = "ap" ] && {
						echo >>"$startup" "NAME=\"\$( uci get wireless.@wifi-iface[$i].network )\""
						echo >>"$startup" "DEV=\$( ifstatus \"\$NAME\" | grep '\"device\":' | cut -d'\"' -f4 )"
						echo >>"$startup" "_log do batman daemon info \"$startup: adding DEV \$DEV to br-mybridge\""
						echo >>"$startup" "brctl addif br-mybridge \$DEV"
					}
				} done
			;;
			*ap)
				echo >>"$startup" "_log do batman daemon info \"$startup: adding DEV wlan0 to br-mybridge\""
				echo >>"$startup" "brctl addif br-mybridge wlan0"
				echo >>"$startup" "brctl addif br-mybridge wlan1	# dirty: simply fails if n/a"
			;;
		esac

#		echo "dnsmasq --address=/#/10.63.$NODENUMBER.1 -p 5353" >>"$startup"

		uci set network.mybridge="interface"
		uci set network.mybridge.type="bridge"
		uci set network.mybridge.ifname="bat0"
		uci set network.mybridge.macaddr="02:00:b0:0b:$( integer2fourhex "$NODENUMBER" )"
		uci set network.mybridge.proto="static"
		uci set network.mybridge.ipaddr="192.168.$NODENUMBER.1"
		uci set network.mybridge.netmask="255.255.0.0"
		uci set network.mybridge.netmask_dhcpcalc="255.255.255.0"

		# https://lists.open-mesh.org/pipermail/b.a.t.m.a.n/2013-November/010913.html
		local mac_gateway="02:00:c0:ca:c0:1a"
		which ebtables >/dev/null && {
			echo >>"$startup" "ebtables -A FORWARD -j DROP -d '$mac_gateway'"
			echo >>"$startup" "ebtables -t nat -A POSTROUTING -o bat0 -j DROP -s '$mac_gateway'"
			echo >>"$startup" "#  query via: ebtables -L FORWARD --Lc; ebtables -t nat -L POSTROUTING --Lc"
		}

		case "$CONFIG_PROFILE" in
			*_adhoc)
			;;
			liszt28*|schoeneck*|boltenhagendh*|apphalle*)
				# depends on kmod-macvlan
				echo >>"$startup" "_log do batman daemon info \"$startup: forcing gateways ip/mac: $router_ip/$mac_gateway\""
				echo >>"$startup" "ip link add link 'br-mybridge' 'gateway0' address '$mac_gateway' type macvlan"
				echo >>"$startup" "ip address add $router_ip/32 dev gateway0"
				echo >>"$startup" "ip link set dev gateway0 up"
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_adhoc|*_hybrid)
				uci set batman-adv.bat0.bridge_loop_avoidance=1
			;;
		esac

		# every node is a server, which means: answer DHCP locally
		if [ "$( uci -q get network.mybridge.ipaddr )" = "$master_gateway" ]; then
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="16384kbit/16384kbit"
		else
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="512kbit/512kbit"

			case "$CONFIG_PROFILE" in
				schoeneck*|boltenhagendh*|apphalle*)
					# no l3-routing proto running, so we need a fix master-gateway
					uci set network.mybridge.gateway="$master_gateway"
					uci set system.@weblogin[0].authserver="$master_gateway"
				;;
			esac
		fi

		uci set dhcp.mybridge=dhcp
		uci set dhcp.mybridge.interface=mybridge
		uci set dhcp.mybridge.start=2
		uci set dhcp.mybridge.limit=253
		uci set dhcp.mybridge.leasetime=12h
		uci set dhcp.mybridge.force=1
		uci set dhcp.mybridge.ignore=0
		uci set dhcp.mybridge.netmask=255.255.0.0
		uci set dhcp.mybridge.dhcp_option="option:router,$router_ip,$dns_ip"	# fixme! dynamic set during runtime
		uci set dhcp.mybridge.leasetime=10m

		uci set dhcp.wlan.ignore=1
	}
}

#!/bin/sh

_ntp_pool()
{
	_list shuffle "$( uci get system.@timeserver[0].server ) $( uci get system.@rdate[0].server )"
}

_ntp_set()			# SENSE: setting time, so each node is nearly in sync with hole network (builtin clock's have strong scatter)
{				# ARG1: force
	local FUNC="ntp_set"	# OUT1: -	// ntp_unset: date -s 010101011970 or better: date --set "2000-12-01 10:33"
	local OPTION="$1"	# force|is_unset|<unixtime>
	local TRY=0
	local HOST IP
	local FILE_SUCCESS="/tmp/ntp_was_successful"	# can be 0 size or has unixtimestamp from last ntp_set
	local program_call

	case "$OPTION" in
		is_unset)
			if [ -e "$FILE_SUCCESS" ]; then
				return 1
			else
				return 0
			fi
		;;
		force)
			[ -e "$FILE_SUCCESS" ] && rm "$FILE_SUCCESS"
		;;
		*)
			isnumber "$OPTION" && {
				date -s @$OPTION
				return
			}
		;;
	esac

	local UP1="$( _system uptime sec )"
	local UP2='0'

	[ -e $FILE_SUCCESS ] && {
		read -r UP2 <"$FILE_SUCCESS"
		UP2=$(( UP1 - ${UP2:-0} ))		# FIXME! use _stopwatch()-abstraction?
		[ $UP2 -lt 3600 ] && {
			_log it $FUNC daemon debug "last successful ntp-fetch was only $UP2 seconds before, aborting"
			return 0
		}
	}
	touch $FILE_SUCCESS			# prevents double-execution

	if   command -v rdate >/dev/null; then
		program_call="rdate -s"
	elif command -v ntpd >/dev/null; then
		program_call="ntpd -q -p"
		pidof ntpd >/dev/null && killall ntpd
	else
		_log it $FUNC daemon debug "no suitable timesetter found"
		return 0
	fi

	_log it $FUNC daemon debug "start"

	while [ $TRY -lt 5 ]; do {
		TRY=$(( TRY + 1 ))

		local ID=0
		for IP in $( _ntp pool ); do {		# IP or HOSTNAME
			ID=$(( ID + 1 ))

			_log it $FUNC daemon debug "ID: '$ID' IP: '$IP'"

			$program_call $IP >/dev/null 2>&1 && {
				UP2="$( _system uptime sec )"
				HOST="$( _net ip2dns $IP )"

				_log it $FUNC daemon info "success after $(( UP2 - UP1 )) seconds and ${TRY}. round on ${ID}. IP in pool (${IP} = $HOST)"

				TRY=9

				[ "$( _file size "$FILE_SUCCESS" )" -eq 0 ] && {

					if [ ! -e "${FILE_SUCCESS}_firsttime" ]; then			# fixme! take real timediff into account

						touch "${FILE_SUCCESS}_firsttime"
						_weblogin generate_prebuilt_splash_htmlfile persistent
#						_log it $FUNC daemon sms \
#							"first successful set after reboot" \
#							"[OK] Neustart eines Geraetes durchgefuehrt: $( _log append_info )"
					else
						_log it $FUNC daemon info "successful set"
						[ -e '/dev/rtc0' ] && hwclock -w -f '/dev/rtc0'
					fi
				}

				echo "$UP2" >$FILE_SUCCESS
				break				# fixme! calc + log diff before/after timesetting in sec?
			}

			sleep 5
		} done
	} done

	[ "$TRY" != "9" ] && {
		_log it $FUNC daemon info "end without success (try: $TRY)"
		# fixme!
		rm $FILE_SUCCESS
	}
}

#!/bin/sh

# "Stick to portable constructs where possible, and you will make somebody's life easier in the future. Maybe your own."

# this outputs an inital small loader which can be sourced for each 'class', e.g. for class 'wifi':
#
# idee: methode 'unload' ?
# idee: methode help?
# idee: $FUNCNAME fuellen ODER alle Vorkommen von FUNCNAME durch realen zur "compile-zeit" ersetzen
# idee: statistik anzeigen lassen per befehl: sed -n "s/^\(.*\) ().*/\1/p" $BASEDIR/${CLASS} | wc -l | sed 's/ //g'
# idee: netparam ohne *MTU|BRC|OLSR|MSK|LO*
# todo: option zum entfernen aller logmeldungen? (bzw. nur log-debug)
# todo: lade-log an/aus (loader/realclass)

. $0.functions

OLDIFS="$IFS"; IFS=". "; read UP1 UP2 NOP </proc/uptime; IFS="$OLDIFS"

DEBUG="$1"			# keyword "debug" or empty
BASEDIR="$( dirname $0 )/kalua"	# scriptbase, simply throw your 'class'-files here e.g. wifi
POOLDIR='/tmp/kalua'
LOADER="/tmp/loader_$$"
LOADER_FINAL='/tmp/loader'	# scripts can source this file and automatically use all 'classes'

# TODO: is locking really needed?
for CLASS in /tmp/loader_* ; do {
	[ -e "$CLASS" ] && {
		logger -s "$0: ignoring call - please remove '$CLASS'"
		exit 0
	}
} done
mkdir -p "$POOLDIR"

# LOWMEM: directly call copy on disc
cd "${BASEDIR}.w" 2>/dev/null && rm -fR "${BASEDIR}.w/"*

cat >"$LOADER" <<EOF
#!/bin/sh
case "\$LODEV" in lo)return;;esac
_(){ ls -1 $POOLDIR|grep ^[a-z]|sort|sed 's/^/_/';}
i(){ . $POOLDIR/\$1;}
EOF

for CLASS in $BASEDIR/*; do {
	CLASS="$( basename $CLASS )"		# generate loader and add methods 'show' + 'include'
	case "$CLASS" in
		[a-z]*)
		;;
		*)
			# only include lowercase names
			continue
		;;
	esac

	HASH="$( md5sum "$BASEDIR/$CLASS" )"
	HASH="${HASH%% *}"

	[ "$DEBUG" = 'debug' ] && {
		DEBUG1="logger -- working in _$CLASS, calling \$1 with args \$@;"
		DEBUG2="logger -- including _$CLASS subfunc \$1;"
		DEBUG3=" || logger -t $CLASS -s \"invalid call: \$1\""
	}

	class_needs_new_build()
	{
		test -e "$POOLDIR/${CLASS}" || return 0
		head -n1 "$POOLDIR/${CLASS}" | grep -q 'local' || return 0
		sh -n "$POOLDIR/${CLASS}" || return 0
		grep -qs "$CLASS $HASH" "$POOLDIR/CHECKSUMS" || return 0

		return 1
	}

	class_needs_new_build && {
		# TODO: is 's' and 'include' needed?
		cat >"$POOLDIR/${CLASS}" <<EOF
_$CLASS(){ ${DEBUG1}local a=\${1-s};shift;_${CLASS}_\$a "\$@"${DEBUG3};}
_${CLASS}_show(){ sed -n "/;}$/! s/^\(_${CLASS}_.*\)()/\1/p" $POOLDIR/${CLASS}|sort;}
_${CLASS}_s(){ _${CLASS}_show;}
_${CLASS}_include(){ :;}
EOF
		if [ -d "${BASEDIR}.w" ]; then
			# LOWMEM: directly call copy on disc
			echo >>"$POOLDIR/${CLASS}" ". $BASEDIR/$CLASS"
		else
			# fixme! do it *fast* when booting, and then do it *good-but-slow* after booting
			_kalua_strip_script "$BASEDIR/$CLASS" "$CLASS" "$DEBUG" >>"$POOLDIR/${CLASS}"
		fi

		# remove maybe old checksum
		[ -e "$POOLDIR/CHECKSUMS" ] && sed -i "/^$CLASS /d" "$POOLDIR/CHECKSUMS"

		if sh -n "$POOLDIR/${CLASS}"; then
			echo "$CLASS $HASH" >>"$POOLDIR/CHECKSUMS"
		else
			DEBUG='compile_error'
		fi
	}

	case "$DEBUG" in
		compile_error)
			DEBUG=
			echo >>"$LOADER" "_${CLASS}(){ logger -s -- CLASSERROR: _$CLASS \$@ ;}"
		;;
		debug)
			. "$POOLDIR/${CLASS}"
			echo >>"$LOADER" "_${CLASS}(){ i $CLASS;shift;${DEBUG2}_${CLASS} \"\$@\"${DEBUG3};}"
		;;
		*)
			echo >>"$LOADER" "_$CLASS(){ i $CLASS;local a=\${1-s};shift;_${CLASS}_\$a \"\$@\";}"
		;;
	esac

	# include GLOBAL_VARS which must be in head-section of CLASS, e.g. MYVAR=123
	case "$( head -n1 "$BASEDIR/$CLASS" )" in
		'#!/bin/sh'*)
			sed -n "2,/^_$CLASS/p" "$BASEDIR/$CLASS" | grep ^"[A-Z]" >>"$LOADER"
		;;
	esac
} done

[ -e "$0.user" ] && . "$0.user" >>"$LOADER"

mv "$LOADER" "$LOADER_FINAL"
LODEV=					# override loader-optimization
. "$LOADER_FINAL"			# FIXME! rely on external functions _log + _file ?

OLDIFS="$IFS"; IFS=". "; read UP3 UP4 NOP </proc/uptime; IFS="$OLDIFS"
TIME=$(( $UP3$UP4 - $UP1$UP2 ))
test $TIME -le 99 && TIME="0$TIME"
TIME="$( echo $TIME | sed 's/^\(.*\)\(..\)$/\1.\2/' )sec"	# 386ms -> 3.86sec

_log do gen_loader daemon info "[OK] done '$LOADER_FINAL' (in $TIME, using $( _file discusage $POOLDIR ) bytes in $POOLDIR) - you MUST reinclude the new loader with 'LODEV= . $LOADER_FINAL' if this is an interactive shell"

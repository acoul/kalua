#!/bin/sh

nf_user()
{
	local cmd="$1"
	local mac="$2"
	local varname="$3"
	local oldIFS obj unixtime timestamp i=0 pair=

	case "$NF_LIST" in
		'')
			if command . "$TMPDIR/NF_USER.sh" 2>/dev/null; then
				:
			elif ls -1 '/tmp/vds_user_'* >/dev/null 2>/dev/null; then
				nf_user_migrate
			fi
		;;
	esac

	case "${#mac}" in 17) oldIFS="$IFS"; IFS=:; set -- $mac; IFS="$oldIFS"; mac="$1$2$3$4$5$6";; esac

	case "$cmd" in
		'list_all')
			for mac in $NF_LIST; do printf '%s\n' "$mac"; done
		;;
		'count_all')
			for mac in $NF_LIST; do i=$(( i + 1 )); done
			eval $varname=$i
		;;
		'delete_all')
			for mac in $NF_LIST; do {
				eval unset "NF_$mac"
			} done
			NF_LIST=
			rm "$TMPDIR/NF_USER.sh"
		;;
		'delete_old')
			unixtime="$( date +%s )"
			for mac in $NF_LIST; do {
				eval pair="\"\${NF_$mac}\""
				timestamp="${pair%,*}"
				test $(( unixtime - timestamp )) -gt 43200 && ustore "$mac" 'remove'
			} done
		;;
		'delete_user')
			ustore "$mac" 'remove'
		;;
		'is_known')
			eval pair="\"\${NF_$mac}\""
			case "$pair" in '') false;; esac
		;;
		'mark_known')
			ustore "$mac" '' ''		# now + empty_hash
		;;
		'set_hash')
			ustore "$mac" '' "$varname"
		;;
		'get_hash')
			eval pair="\"\${NF_$mac}\""
			eval $varname=${pair#*,}
		;;
		'backup')
			cmp -s "$TMPDIR/NF_USER.sh" "$PERMDIR/NF_USER.sh" || {
				sh -n "$TMPDIR/NF_USER.sh" && {
					cp "$TMPDIR/NF_USER.sh" "$PERMDIR/NF_USER.sh"
				}
			}
		;;
		'restore')
			test -e    "$PERMDIR/NF_USER.sh" && {
				cp "$PERMDIR/NF_USER.sh" "$TMPDIR/NF_USER.sh"
			}
		;;
	esac
}

ustore()
{
	local mac="$1"
	local unixtime="$2"	# or 'remove'
	local hash="$3"
	local oldIFS i=

	case "$NF_LIST" in '') command . "$TMPDIR/NF_USER.sh" 2>/dev/null;; esac
	oldIFS="$IFS"; IFS=:; set -- $mac; IFS="$oldIFS"; local shortmac="$1$2$3$4$5$6"
	case "$unixtime" in
		'')
			unixtime="$( date +%s )"
		;;
		'remove')
			eval unset "NF_$mac"
			# copy all to new list, except the one:
			for obj in $NF_LIST; do case "$mac" in "$obj");; *) i="$i $obj";; esac; done; NF_LIST="$i"
			{
				printf '%s\n' "unset NF_$mac"
				printf '%s\n' "NF_LIST=\"$NF_LIST\""
			} >>"$TMPDIR/NF_USER.sh"
			return
		;;
	esac

	eval export NF_$shortmac="$unixtime,$hash"
	case " $NF_LIST " in *" $shortmac "*);; *) NF_LIST="$NF_LIST $shortmac";; esac

	# append to UFILE - locked?
	echo >>"$TMPDIR/NF_USER.sh" "NF_$shortmac=\"$unixtime,$hash\""
}

nf_user_migrate()
{
	local file unixtime mac hash

	for file in '/tmp/vds_user_'*; do {
		case "$file" in *'*') return 0 ;; esac

		unixtime="$( _file time "$file" unix )"
		mac="${file#*user_}"
		hash=; read -r hash <"$file"

		ustore "$mac" "$unixtime" "$hash"
		rm "$file"
	} done

	echo "NF_LIST=\"$NF_LIST\"" >>"$TMPDIR/NF_USER.sh"
}

#!/bin/sh
. /tmp/loader

help()
{
	echo "Usage: $0 (meshrdf | evalable | get_nlq | best_wifi_nlq | check4nonwifi | check4wifi | check4good_non_tunnel_neigh | get_random | get_random_pair [max_cost] | get_cost2node node | plain | <empty>)"
}

ACTION="$1"
OPTION="$2"

case "$ACTION" in
	gateways)
		_olsr gateways_get
	;;
	evalable)
		_olsr neighs_extended_evalable verbose
	;;
	best_wifi_nlq)
		_olsr neigh_nlq_best_wifi				# output like '500' which is 0.500 - output can be <empty>!
	;;
	get_nlq)
		[ -n "$OPTION" ] && {
			_olsr neigh_nlq "$2" "$3" "$4"	
		}
	;;
	check4nonwifi)
		_olsr neigh_check_for_nonwifi
	;;
	check4wifi)
		_olsr neigh_check_for_wifi
	;;
	check4good_non_tunnel_neigh)
		_olsr neigh_check_for_good_non_tunnel || exit 1
	;;
	get_random)
		_olsr neigh_random_get					# returns IP or EMPTY (!)
	;;
	get_random_pair)
		_olsr neigh_random_pair_from_mesh_evalable "$OPTION"	# fixme! max_cost not yet implemented
	;;
	get_cost2node)
		_olsr node_evalable "$OPTION"
	;;
	plain)
		cat /tmp/OLSR/ALL
	;;
	help)
		help
	;;
	*)
		if [ -z "$ACTION" ]; then
			_olsr neighs_humanreadable		# fixme! +gps +distance +olsrd/ff/fff-version?
		else
			[ "$ACTION" = "." ] && ACTION="127.0.0.1"

			_sanitizer do "$ACTION" numeric check && {			# e.g. 356
				ACTION="$( _ipsystem do "$ACTION" | grep ^WIFIADR )"
				ACTION="$( _sanitizer do "$ACTION" ip4 )"
			}

			_sanitizer do "$ACTION" ip4 check && {				# e.g. 10.63.127.1
				wget -qO - "http://$ACTION/cgi-bin-tool.sh?OPT=neigh"
				exit
			}

			[ -n "$( _net dns2ip "$ACTION" )" ] && {			# e.g. badeofen-AP.olsr
				wget -qO - "http://$ACTION/cgi-bin-tool.sh?OPT=neigh"
				exit
			}
		fi
	;;
esac

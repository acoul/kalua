#!/bin/sh
[ -z "$UP" ] && read UP REST </proc/uptime
. /tmp/loader

check_switch_health()
{
	local funcname="check_switch_health"
	local file="/www/switch.txt"
	local switch_new="$( _switch show )"
	local switch_old good_ports

	[ -z "$switch_new" ] && return 0

	if [ -e "$file" ]; then
		read switch_old <"$file"
		if [ "$switch_new" = "$switch_old" ]; then
			return 0
		else
			bool_true 'system.@monitoring[0].report_switch_change' && {
				_log do $funcname daemon sms "[OK] now: $switch_new old: $switch_old"
			}
		fi

#		_log do $funcname daemon sms "changed: new: $switch_new old: $switch_old"

		[ "$( uci -q get system.@monitoring[0].switch_error )" = 'ignore' ] || {
			[ -e '/tmp/switch_strange' ] || {
				[ $( _file age "$file" sec ) -lt 600 ] && {
					_watch counter '/tmp/switch_flapping' increment 1 max 25 || {
#						_log do $funcname daemon sms "[ERR] flapping: $switch_new / $switch_old"
						touch '/tmp/switch_strange'
						return 0
					}
				}
			}
		}

		good_ports_new="$( echo "$switch_new" | sed 's/[^a-cA-C]//g' )"		# e.g. C.Ba-C -> CBaC (only used ports)
		good_ports_old="$( echo "$switch_old" | sed 's/[^a-cA-C]//g' )"

		if [ ${#good_ports_new} -ge ${#good_ports_old} ]; then
			_log do $funcname daemon alert "portmap: '$switch_new' was: '$switch_old' (ports changed, more or equal links)"
			echo "$switch_new" >"$file"

			return 0
		else
			if [ ${#good_ports_new} -gt 0 ]; then
				_log do $funcname daemon alert "portmap: '$switch_new' was: '$switch_old' (ports changed, fewer links)"
				echo "$switch_new" >"$file"

				if [ -e "/tmp/check_switch_health" ]; then
					return 0
				else
					return 1
				fi
			else
				_log do $funcname daemon alert "portmap: '$switch_new' was: '$switch_old' (ports changed, no links)"
				rm "$file"

				return 1
			fi
		fi
	else
		_log do $funcname daemon alert "portmap: '$switch_new' (initial)"
		echo "$switch_new" >"$file"

		[ -z "$( ip route list exact '0.0.0.0/0' )" ] && {
			good_ports_new="$( echo "$switch_new" | sed 's/[^a-cA-C]//g' )"		# e.g. C.Ba-C -> CBaC (only used ports)

			[ ${UP%.*} -lt 600 -a ${#good_ports_new} -eq 0 ] && {
				_log do $funcname daemon alert "switch was never active, wo dont have internet and we are low on uptime ($UP): reboot"
				# maybe even the first boot was wrong
				return 1
			}
		}
	fi

	return 0
}

if check_switch_health; then
	touch '/tmp/check_switch_health'
else
	bool_true 'system.@monitoring[0].ignore_switch_error' || {
		if [ $( cat '/www/REBOOT_COUNTER' ) -gt 50 ] ; then
			_log do $funcname daemon info "reboots >50, ignoring call"
		else
			sleep $( _math random_integer 0 100 )
			_system crashreboot 'switch_error'
		fi
	}
fi

#!/bin/sh

heartbeat_minimal_send()
{
	local up="$1"		# hours
	local load="$2"		# 15mins

	local file_url='/tmp/MONITORING_HEARTBEAT_URL'
	local file_archiv="$TMPDIR/ARCHIV_MONITORING"
	local mac url up free load lan_clients wifi_clients

	if [ -e "$file_url" ]; then
		read -r url <"$file_url"
	else
		# at least on normal sending/monitoring-run is needed
		grep -q ^'# alive-message was send' "$file_archiv" || {
			grep -q 'olsrrestarttime=' "$file_archiv" || return 1
		}

		read -r mac <'/www/monitoring.wifimac'
		url="$( uci -q get system.@monitoring[0].url )/meshrdf/?refresh=true&mac=$mac"
		echo "$url" >"$file_url"
	fi

	up="$( _system uptime hours )"
	free="$( _system ram_free )"
	load="$( _system load 15min )"
	wifi_clients="$( _net count_wireless )"
	lan_clients="$( _net count_wired )"

	url="$url&up=$up&h2=$free&load=$load&version=$FFF_PLUS_VERSION&r4=$wifi_clients&r5=$lan_clients"

	case "$( _curl it "$url" 30 )" in
		'REFRESHED')
			echo "$url" >"$file_archiv"
		;;
	esac
}

heartbeat_mapapi_http_put()
{
	local file="$1"
	local server="$2"
	local url="$3"

	printf '%s\r\n' "PUT /$url HTTP/1.1"
	printf '%s\r\n' 'User-Agent: netcat'
	printf '%s\r\n' "Host: $server"
	printf '%s\r\n' 'Accept: */*'
	printf '%s\r\n' "Content-Length: $( _file size "$file" )"
	printf '%s\r\n' 'Content-Type: application/x-www-form-urlencoded'
	printf '\r\n'

	cat "$file"
}

heartbeat_mapapi()
{
	local server='mapapi.weimarnetz.de'
	local url="update_node/$HOSTNAME.olsr"
	local file="$TMPDIR/mapapi.cache"
	local nexthop gateway system_type latlon lat lon

	latlon="$( uci -q get system.@admin[0].latlon )"	# 50.97389;11.31875
	lat="${latlon%;*}"
	lon="${latlon#*;}"

	read -r gateway <'/tmp/GATEWAY_CHECK_RECENT_GATEWAY_IP_ONLY'
	read -r nexthop <'/tmp/GATEWAY_CHECK_RECENT_NEXTHOP_IP_ONLY'

	explode $( grep ^'system type' '/proc/cpuinfo' )
	shift 3
	system_type="$*"	# Atheros AR9132 rev 2

	cat >"$file" <<EOF
 {
"api_rev": "1.0",
"hostname": "$HOSTNAME",
"hardware": "${system_type:-unknown_SoC}",
"latitude": ${lat:-50.97},
"longitude": ${lon:-11.31},
"type": "node",
"updateInterval": 3600,
"location": "$HOSTNAME",
"system": {
	"sysinfo": [
		"$HARDWARE"
	],
	"uptime": [
		$( _system uptime sec )
	]
	},
"weimarnetz": {
	"gateway": "$gateway",
	"nodenumber": $NODENUMBER,
	"nexthop": "$nexthop",
	"gatewaycost": 1
	},
$( cat "$TMPDIR/links.json" 2>/dev/null && printf ',' )
"firmware": {
	"distname": "",
	"luciname": "no LuCI",
	"fffversion": "$FFF_PLUS_VERSION",
	"luciversion": "0",
	"revision": "OpenWrt (kalua) r$OPENWRT_REV",
	"distversion": "OpenWrt (kalua) r$OPENWRT_REV",
	"name": ""
	}
 }
EOF

	heartbeat_mapapi_http_put "$file" "$server" "$url" | nc "$server" 80
}

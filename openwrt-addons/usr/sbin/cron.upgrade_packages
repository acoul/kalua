#!/bin/sh
. /tmp/loader								# fixme! push most into _software() because it is very ipkg-specific

									# this one does: reading and working directly with a stream of
									# package-metadata without the need to use flashspace like with 'ipkg update'
[ "$1" != "force" ] && {
	_firmware updatemode 0 && {
		_log do grab_package_list daemon debug "no autoupdate - no execution"
		exit 0
	}

	[ $( _system flash_free ) -lt 128 ] && {
		_log do grab_package_list daemon debug "low flash <128k, no execution"
		exit 0
	}

	bool_true 'system.@system[0].noswinstall' && {
		_log do grab_package_list daemon debug "[OK] forbidden by user - see 'system.@system[0].noswinstall'"
		exit 0
	}
}

[ -n "$LOWMEM" ] && {
	[ $( _file lines /proc/modules ) -gt 23 ] && {
		_log do grab_package_list daemon info "too much kmodules - /www/GOOD_MODULE_UNLOAD not populated yet"
		exit
	}
}

pidof $(basename $OPKG) >/dev/null && exit

	# idea:
	# build package-list as short as possible to avoid big repo-files, e.g. omit:
	# Priority, Maintainer, Section, Description, Source, Architecture, Depends, MD5Sum, Conflicts, Size?
	# -> only: Package, Version, Filename ?

URL_PACKAGE_LIST="$( uci get system.@monitoring[0].url )/packages/Packages"
_log do grab_package_list daemon debug "fetching '$URL_PACKAGE_LIST'"

_curl it "$URL_PACKAGE_LIST" 30 >/tmp/UPGRADE_PACKAGE_LIST || {
	rm /tmp/UPGRADE_PACKAGE_LIST
	exit 1
}

echo "upgrade_packages" >"/tmp/CRON_OVERLOAD"

while read -r LINE; do {
	case "${LINE%: *}" in				# *pkg-keyword
		Priority|Maintainer|Section|Description|Source|Architecture|Depends|MD5Sum|Conflicts)
			continue
		;;
		Package)
			PACKAGE="${LINE#*: }"		# mydesign
			VERSION=
			FILENAME=
		;;
		Version)
			VERSION="${LINE#*: }"		# 0.1
		;;
		Filename)
			FILENAME="${LINE#*: }"		# mydesign_0.1.ipk
		;;
		Size)
			PACKAGE_SIZE="${LINE#*: }"						# 154119 [bytes]
			PACKAGE_SIZE=$(( ${PACKAGE_SIZE:-0} / 1000 ))				# 154
			PACKAGE_SIZE=$(( PACKAGE_SIZE + $(( PACKAGE_SIZE / 5 )) ))		# 184 (+20%)	estimated flash_size
		;;
		"")
			[ -n "$VERSION" -a -n "$FILENAME" ] && {
				case "$PACKAGE" in
					mydesign|mysettings|sshpubkeys|fff-adblock-list)	# idea! accept all packages?

						VERSION_HERE="$( _software package_version $PACKAGE )"
						VERSION_SERVER="$VERSION"

						if [ "$( _software package_newer_version ${VERSION_HERE:=0} $VERSION_SERVER )" = "$VERSION_SERVER" ] || _software package_is_not_installed $PACKAGE; then

							URL="$( uci get system.@monitoring[0].url )/packages/${FILENAME}?host=$( uci get system.@system[0].hostname )"
							_log do found_newer_version daemon alert "upgrading '$PACKAGE' (here/server: v$VERSION_HERE/v$VERSION_SERVER url: '$URL' expected_size: $PACKAGE_SIZE kb)"

							FILE="/tmp/${PACKAGE}_${VERSION_SERVER}_$$.ipk"		# better logging
							wget -qO "$FILE" "$URL"

							[ "$PACKAGE" = "mysettings" ] || {
								_software make_free_space ${PACKAGE_SIZE:-0}
							}

							[ -n "$LOWMEM" ] && {
								[ -e "/dev/zram0" ] || ZRAM_WAS_INACTIVE=true
								/etc/init.d/uhttpd stop
							}

							[ "$ZRAM_WAS_INACTIVE" = "true" ] && /etc/init.d/zram start
							_software package_install "$FILE" noautorepoupdate	# package must have no dependencies
							[ "$ZRAM_WAS_INACTIVE" = "true" ] && /etc/init.d/zram stop
							pidof uhttpd >/dev/null || /etc/init.d/uhttpd start

							case "$PACKAGE" in
								fff-adblock-list)
									pidof dnsmasq >/dev/null && {
										/etc/init.d/S43ethers_fff+ call		# rebuild /etc/local.hosts
										/etc/init.d/dnsmasq restart
									}
								;;
								mydesign)
									[ "$( uci show wireless )" = "$( /etc/init.d/override_uci_vars boot; uci show wireless )" ] || {
										_wifi phy_restart "$WIFIDEV" 'mydesign/new_settings'
									}
								;;
							esac

							rm "$FILE"
						else
							_log do version_not_newer daemon debug "package '$PACKAGE' not upgradeable (here/server: v$VERSION_HERE/v$VERSION_SERVER)"
						fi

						# FIXME! https://dev.openwrt.org/ticket/19699
						rm /usr/lib/opkg/info/*.postinst 2>/dev/null

						_watch flash_free_space
					;;
					*)
						_log do uninteresting_package daemon debug "ignoring '$PACKAGE'"	# fixme! upgrade already installed packages?
					;;
				esac

				PACKAGE=; VERSION=; FILENAME=; PACKAGE_SIZE=
			}
		;;
	esac

} done </tmp/UPGRADE_PACKAGE_LIST

rm "/tmp/UPGRADE_PACKAGE_LIST" "/tmp/CRON_OVERLOAD"

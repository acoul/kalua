#!/bin/sh
. /tmp/loader

_1wire vars
_1wire lockfile_set

if [ "$REQUEST_METHOD" = "GET" ]; then				# what about POST,PUT,DELETE?
	eval $( _http query_string_sanitize "$0" )
	_1wire check_https
	_1wire check_auth
else								# call from shell
	[ -n "$REMOTE_ADDR" ] && {				# unimplemented request-method, not from shell
		_1wire lockfile_remove
		exit 1
	}

	ACTION="$1"

	test -z "$ACTION" && ACTION="jobwork"
fi

case "$ACTION" in
	backup)
		_1wire vars
		_1wire backup
	;;
	jobwork)
		_1wire vars
		_1wire sensor_data_fetch
	;;
	joblist)
		if [ -e "$JOBFILE" ]; then
			cat "$JOBFILE"
			_1wire print_endtag
		else
			_1wire error_trap "no jobfile yet"
		fi
	;;
	jobadd)
		if grep -Fqs "$CHIP $FIELD " "$JOBFILE" ; then
			_1wire file_remove_line "$JOBFILE" "$CHIP $FIELD "
			_1wire file_print  "$JOBFILE" "$CHIP $FIELD $THRESHOLDSTART $THRESHOLDEND"
		else
			_1wire file_print  "$JOBFILE" "$CHIP $FIELD $THRESHOLDSTART $THRESHOLDEND"
		fi

		_1wire print_endtag
	;;
	jobdel)
		if grep -Fqs "$CHIP $FIELD " "$JOBFILE" ; then
			_1wire file_remove_line "$JOBFILE" "$CHIP $FIELD "
			_1wire print_endtag
		else
			_1wire error_trap "no such job!"
		fi
	;;
	chiplist)
		OUT="$(_1wire sensor_show)"
		if [ -z "$OUT" ]; then
			_1wire error_trap "zero output - owfs not running?"
		else
			echo "$OUT"
			_1wire print_endtag
		fi
	;;
	chipget)
		TERM1="$(echo "$FIELD" | cut -d"," -f1)"
#		TERM2="$(echo "$FIELD" | cut -d"," -f2)"

#		ADDON=
		if [ "$TERM1" != "TERM2" ]; then
#			ADDON="uncached/"
			FIELD="$TERM1"
		fi

		OUT="$(_1wire sensorfield_show)"
		if [ -z "$OUT" ]; then
			_1wire error_trap "no values, wrong or nonexistent field or sensor?"
		else
			echo "$OUT"
			_1wire print_endtag
		fi
	;;
	chipset)
		_1wire error_trap "not implemented yet"
	;;
	chiphistory)
		if [ -e "$JOBDATA.$CHIP.$FIELD" ]; then
			test -z "$TIMESTART" && TIMESTART=0
			test -z "$TIMEEND"   && TIMEEND="$(_system date unixtime)"

			awk -v S="$TIMESTART" -v E="$TIMEEND" '{if($1>=S && $1<=E)print $0}' "$JOBDATA.$CHIP.$FIELD" 2>/dev/null

			if [ "$?" -ne 0 ]; then
				_1wire error_trap "no values in time-range"
			else
				_1wire print_endtag
			fi
		else
			_1wire error_trap "no datafile yet"
		fi
	;;
	*)
		_1wire usage
	;;
esac

_1wire lockfile_remove

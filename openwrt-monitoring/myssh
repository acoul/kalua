#!/bin/sh

# ralf: 14024
# marina: 24159
# berline-ap: 15276

NETWORK="$1"
NODE_WISH="$2"		# nodenumber|ppp*(default)|recent|002590382edc|keyword|recent_next
FORCE_STARTSSH="$3"	# 'ssh'
USER="${4:-root}"

log()
{
	logger -s "$0: $1"
}

[ -z "$NETWORK" ] && {
	echo "Usage: $0 <network> <nodenumber|pppoe|recent|recent_next>"
	exit 1
}

case "$NODE_WISH" in
	'recent_next')
		while true; do {
			FILE="/var/www/networks/$NETWORK/meshrdf/recent"
			FILE="$FILE/$( ls -1t "$FILE" | head -n1 )"
			FILE_DATE="$( ls -lt "$FILE" )"
			log "FILE: '$FILE' FILE_DATE: '$FILE_DATE'"

			[ "$FILE_DATE" = "${OLD_FILE_DATE:-$FILE_DATE}" ] || break
			OLD_FILE_DATE="$FILE_DATE"

			logger -s "waiting for change: '$FILE_DATE' (waiting 30 sec)"
			sleep 30
		} done

		. $FILE
		REMOTE_ADDR="$PUBIP_REAL"
	;;
	"recent")
		# strips out 0-byte files:
		FILE="/var/www/networks/$NETWORK/meshrdf/recent"
		FILE="${FILE}/$( ls -1t $FILE | grep "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]"$ | grep -v '    0 ' | head -n1 )"

		[ -e "$FILE.changes" ] && {
			T1="$( stat -c "%Y" "$FILE" )"
			T2="$( stat -c "%Y" "$FILE.changes" )"

			[ $T1 -gt $T2 ] || FILE="$FILE.changes"
		}

		log "# using this one"		# stat -c "%Y" "$FILE"
		ls -la "$FILE"
		log "#"
		. $FILE
		REMOTE_ADDR="$PUBIP_REAL"
	;;
	"ppp"*|"")
		for FILE in /var/www/networks/$NETWORK/meshrdf/recent/*; do {
			echo "$FILE" | grep -q "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]"$ || continue

			case "$FILE" in
				*0013100ad58d)		# fixme!
					continue
				;;
				*)
					if grep ^"$( basename "$FILE" )" "/var/www/networks/$NETWORK/ignore/macs.txt"; then
						continue
					else
						local i0=
						. $FILE
					fi
				;;
			esac
	
			case "$NODE_WISH" in
				"ppp"*)
					[ "$i0" = "pppoe" ] || i5=
				;;
			esac

			[ -n "$i5" ] && {
				log "[OK] using '$HOSTNAME': $FILE"
				REMOTE_ADDR="$PUBIP_REAL"
				break
			}
		} done

		[ -z "$REMOTE_ADDR" ] && {
			log "[OK] no INET_OFFER found - fallback to remote_addr"
			read -r REMOTE_ADDR <"/var/www/networks/$NETWORK/pubip.txt"
		}
	;;
	[0-9a-f]*|pbx)
		case "$NODE_WISH" in
			pbx)
				USER="ejbw"
				NODE_WISH="002590382edc"
			;;
		esac

		log "[OK] reading /var/www/networks/$NETWORK/meshrdf/recent/$NODE_WISH"
		. /var/www/networks/$NETWORK/meshrdf/recent/$NODE_WISH
		REMOTE_ADDR="$PUBIP_REAL"
	;;
	[0-9]*)
		for FILE in /var/www/networks/$NETWORK/meshrdf/recent/*; do {
			echo "$FILE" | grep -q "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]"$ || continue

			. $FILE
			[ "$NODE" = "$NODE_WISH" ] && {
				REMOTE_ADDR="$PUBIP_REAL"
				break
			}
		} done
	;;
	*)
		exit 1
	;;
esac

startssh()
{
	local port="${1:-80}"
	local proto="${2:-http}"
	local url="$proto://$REMOTE_ADDR:$port/cgi-bin-tool.sh?OPT=startshell"

	log "wget --no-check-certificate -O - '$url'"
	wget --no-check-certificate -O - "$url"
}

get_port_for_reverse_ssh_tunnel()
{
	case "$NETWORK" in
		cupandcoffee)
			PORT="22899"
		;;
		preskil)
			PORT="12358"
		;;
		limona)
			PORT="16619"
		;;
		amalienhof)
			PORT='19489'
		;;
		marinabh)
			PORT="18733"
		;;
		marinapark)
			PORT=15308
		;;
		adagio)
			PORT=14505
		;;
		ilm1)
			PORT=9871
		;;
	esac

	[ -n "$PORT" ] && {
		REVTUNNEL="true"
		REMOTE_ADDR="127.0.0.1"
	}
}

case "$NODE_WISH" in
	ppp*)
	;;
	*)
		case "$NETWORK" in
			ejbw)
				echo "https://remote.ejbweimar.de:20443"
				echo "remote.ejbweimar.de:22 --> auf WLAN-Server Port 22"
				echo "remote.ejbweimar.de --> 82.119.190.227"
				echo 'curl --insecure "https://remote.ejbweimar.de:20443/cgi-bin-tool.sh?OPT=startshell"'
			;;
			preskil|limona|cupandcoffee|amalienhof|marinapark|adagio|ilm1)
				log "$FILE: $FILE"
				get_port_for_reverse_ssh_tunnel
			;;
			xoai)
				echo "pass = smileysmiles"
			;;
			schoeneck)
				PORT="10022"
				HTTP_PORT="10080"
				HTTP_PROTO="http"
			;;
			ejbw-pbx)
				USER="ejbw"
			;;
			monami|versiliaje|extrawatt)
				startssh
			;;
			zumnorde|tkolleg)
				PORT="10022"
			;;
			berlinle)
				PORT=20000
			;;
			marinabh)
				get_port_for_reverse_ssh_tunnel
				HTTP_PORT="18796"
			;;
			aschbach)
				PORT="2222"
				HTTP_PORT=5443
				HTTP_PROTO="https"
			;;
			hotello-*|aschbach|olympia)
				PORT="2222"
				HTTP_PORT=22443
				HTTP_PROTO="https"
			;;
			*)
				PORT="22"
				HTTP_PORT=80
				HTTP_PROTO="http"
			;;
		esac
	;;
esac

log "REVTUNNEL: '$REVTUNNEL' using PORT $PORT and HTTP_PORT $HTTP_PORT and HTTP_PROTO $HTTP_PROTO"


[ -n "$FORCE_STARTSSH" ] && startssh

APPEND="-p ${PORT:=22}"
PAUSE=1

log "connecting to $USER@${REMOTE_ADDR:-empty_ipaddress} $APPEND"

if [ -n "$REVTUNNEL" ]; then
	while true; do {
		log "exec: ssh $USER@$REMOTE_ADDR $APPEND"
		ssh -v -o ConnectTimeout=5 -o ConnectionAttempts=1 $USER@$REMOTE_ADDR $APPEND
		log "next connection-attempt in $PAUSE sec"
		sleep $PAUSE; PAUSE=10
#		startssh $HTTP_PORT $HTTP_PROTO
	} done
else
	log "exec: ssh $USER@$REMOTE_ADDR $APPEND"

	ssh -v -o ConnectTimeout=5 -o ConnectionAttempts=1 $USER@$REMOTE_ADDR $APPEND || {
		log "next connection-attempt in $PAUSE sec"
		sleep $PAUSE; PAUSE=30
		startssh $HTTP_PORT $HTTP_PROTO && ssh $USER@$REMOTE_ADDR $APPEND
	}
fi

From bbd520f1ee96f2876a7dfd8ad14ba0445ed1abea Mon Sep 17 00:00:00 2001
From: Bastian Bittorf <bb@npl.de>
Date: Thu, 23 Feb 2017 08:16:28 +0100
Subject: [PATCH] usign: support new option '-B': print a secret which was
 included during build

we MUST patch the sourcecode (string PRIME1/PRIME2) before compiling:
we need to include two large random primenumbers, like:

 #!/bin/sh
 P1=$(openssl prime -generate -bits 256)
 P2=$(openssl prime -generate -bits 256)
 sed -e "s/PRIME1/\"$P1\"/" -e "s/PRIME2/\"$P2\"/" main.c

after that, a user can prove that he knows the
solution (at least 1 prime factor) to a serverside stored "product",
which is generated for each image, so the user can proof,
that he really flashed the image, and that it works.

Signed-off-by: Bastian Bittorf <bb@npl.de>
---
 main.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/main.c b/main.c
index 3536443..84aa4c1 100644
--- a/main.c
+++ b/main.c
@@ -334,6 +334,7 @@ static int usage(const char *cmd)
 		"  -S:			sign (needs at least -m and -s)\n"
 		"  -F:			print key fingerprint of public/secret key or signature\n"
 		"  -G:			generate a new keypair\n"
+		"  -B:			show secret, which was included during build\n"
 		"Options:\n"
 		"  -c <comment>: 	add comment to keys\n"
 		"  -m <file>:		message file\n"
@@ -360,8 +361,11 @@ int main(int argc, char **argv)
 	const char *msgfile = NULL;
 	int ch;
 
-	while ((ch = getopt(argc, argv, "FGSVc:m:P:p:qs:x:")) != -1) {
+	while ((ch = getopt(argc, argv, "BFGSVc:m:P:p:qs:x:")) != -1) {
 		switch (ch) {
+		case 'B':
+			fprintf(stdout, "%s\n", PRIME1);
+			return 0;
 		case 'V':
 			set_cmd(argv[0], CMD_VERIFY);
 			break;
-- 
1.9.1

